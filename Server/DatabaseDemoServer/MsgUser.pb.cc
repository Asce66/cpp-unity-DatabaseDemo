// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgUser.proto

#include "MsgUser.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_MsgUser_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateWriter_MsgUser_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgUser_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Writer_MsgUser_2eproto;
namespace Protocol {
class C2SLoginDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SLogin> _instance;
} _C2SLogin_default_instance_;
class S2CLoginDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CLogin> _instance;
} _S2CLogin_default_instance_;
class C2SRegisterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SRegister> _instance;
} _C2SRegister_default_instance_;
class S2CRegisterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CRegister> _instance;
} _S2CRegister_default_instance_;
class WriterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Writer> _instance;
} _Writer_default_instance_;
class UpdateWriterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateWriter> _instance;
} _UpdateWriter_default_instance_;
class C2SWriterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SWriter> _instance;
} _C2SWriter_default_instance_;
class S2CWriterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CWriter> _instance;
} _S2CWriter_default_instance_;
class C2SAddWritersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddWriters> _instance;
} _C2SAddWriters_default_instance_;
class S2CAddWritersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CAddWriters> _instance;
} _S2CAddWriters_default_instance_;
class C2SDeleteWritersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDeleteWriters> _instance;
} _C2SDeleteWriters_default_instance_;
class C2SUpdateWritersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SUpdateWriters> _instance;
} _C2SUpdateWriters_default_instance_;
}  // namespace Protocol
static void InitDefaultsscc_info_C2SAddWriters_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddWriters_default_instance_;
    new (ptr) ::Protocol::C2SAddWriters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddWriters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddWriters_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddWriters_MsgUser_2eproto}, {
      &scc_info_Writer_MsgUser_2eproto.base,}};

static void InitDefaultsscc_info_C2SDeleteWriters_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDeleteWriters_default_instance_;
    new (ptr) ::Protocol::C2SDeleteWriters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDeleteWriters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDeleteWriters_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDeleteWriters_MsgUser_2eproto}, {}};

static void InitDefaultsscc_info_C2SLogin_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SLogin_default_instance_;
    new (ptr) ::Protocol::C2SLogin();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SLogin::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SLogin_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SLogin_MsgUser_2eproto}, {}};

static void InitDefaultsscc_info_C2SRegister_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SRegister_default_instance_;
    new (ptr) ::Protocol::C2SRegister();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SRegister::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SRegister_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SRegister_MsgUser_2eproto}, {}};

static void InitDefaultsscc_info_C2SUpdateWriters_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SUpdateWriters_default_instance_;
    new (ptr) ::Protocol::C2SUpdateWriters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SUpdateWriters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SUpdateWriters_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SUpdateWriters_MsgUser_2eproto}, {
      &scc_info_UpdateWriter_MsgUser_2eproto.base,}};

static void InitDefaultsscc_info_C2SWriter_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SWriter_default_instance_;
    new (ptr) ::Protocol::C2SWriter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SWriter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SWriter_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SWriter_MsgUser_2eproto}, {}};

static void InitDefaultsscc_info_S2CAddWriters_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CAddWriters_default_instance_;
    new (ptr) ::Protocol::S2CAddWriters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CAddWriters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_S2CAddWriters_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_S2CAddWriters_MsgUser_2eproto}, {}};

static void InitDefaultsscc_info_S2CLogin_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CLogin_default_instance_;
    new (ptr) ::Protocol::S2CLogin();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CLogin::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_S2CLogin_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_S2CLogin_MsgUser_2eproto}, {}};

static void InitDefaultsscc_info_S2CRegister_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CRegister_default_instance_;
    new (ptr) ::Protocol::S2CRegister();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CRegister::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_S2CRegister_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_S2CRegister_MsgUser_2eproto}, {}};

static void InitDefaultsscc_info_S2CWriter_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CWriter_default_instance_;
    new (ptr) ::Protocol::S2CWriter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CWriter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CWriter_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CWriter_MsgUser_2eproto}, {
      &scc_info_Writer_MsgUser_2eproto.base,}};

static void InitDefaultsscc_info_UpdateWriter_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_UpdateWriter_default_instance_;
    new (ptr) ::Protocol::UpdateWriter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::UpdateWriter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateWriter_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateWriter_MsgUser_2eproto}, {
      &scc_info_Writer_MsgUser_2eproto.base,}};

static void InitDefaultsscc_info_Writer_MsgUser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_Writer_default_instance_;
    new (ptr) ::Protocol::Writer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Writer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Writer_MsgUser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Writer_MsgUser_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MsgUser_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_MsgUser_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MsgUser_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MsgUser_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SLogin, account_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SLogin, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CLogin, account_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CLogin, password_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CLogin, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SRegister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SRegister, account_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SRegister, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CRegister, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CRegister, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::Writer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::Writer, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Writer, sex_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Writer, bh_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Writer, birth_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Writer, bmh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateWriter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateWriter, oldbh_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateWriter, writer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SWriter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SWriter, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CWriter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CWriter, writerlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddWriters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddWriters, writerlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CAddWriters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CAddWriters, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteWriters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteWriters, writerlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateWriters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateWriters, writerlist_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Protocol::C2SLogin)},
  { 7, -1, sizeof(::Protocol::S2CLogin)},
  { 15, -1, sizeof(::Protocol::C2SRegister)},
  { 22, -1, sizeof(::Protocol::S2CRegister)},
  { 28, -1, sizeof(::Protocol::Writer)},
  { 38, -1, sizeof(::Protocol::UpdateWriter)},
  { 45, -1, sizeof(::Protocol::C2SWriter)},
  { 51, -1, sizeof(::Protocol::S2CWriter)},
  { 57, -1, sizeof(::Protocol::C2SAddWriters)},
  { 63, -1, sizeof(::Protocol::S2CAddWriters)},
  { 69, -1, sizeof(::Protocol::C2SDeleteWriters)},
  { 75, -1, sizeof(::Protocol::C2SUpdateWriters)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SLogin_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CLogin_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SRegister_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CRegister_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_Writer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_UpdateWriter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SWriter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CWriter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddWriters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CAddWriters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDeleteWriters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SUpdateWriters_default_instance_),
};

const char descriptor_table_protodef_MsgUser_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rMsgUser.proto\022\010Protocol\"-\n\010C2SLogin\022\017\n"
  "\007account\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"=\n\010S2CL"
  "ogin\022\017\n\007account\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022"
  "\016\n\006result\030\003 \001(\005\"0\n\013C2SRegister\022\017\n\007accoun"
  "t\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\035\n\013S2CRegister"
  "\022\016\n\006result\030\001 \001(\005\"K\n\006Writer\022\014\n\004name\030\001 \001(\t"
  "\022\013\n\003sex\030\002 \001(\t\022\n\n\002BH\030\003 \001(\t\022\r\n\005birth\030\004 \001(\t"
  "\022\013\n\003BMH\030\005 \001(\t\"\?\n\014UpdateWriter\022\r\n\005oldBH\030\001"
  " \001(\t\022 \n\006writer\030\002 \001(\0132\020.Protocol.Writer\"\034"
  "\n\tC2SWriter\022\017\n\007request\030\001 \001(\005\"1\n\tS2CWrite"
  "r\022$\n\nwriterList\030\001 \003(\0132\020.Protocol.Writer\""
  "5\n\rC2SAddWriters\022$\n\nwriterList\030\001 \003(\0132\020.P"
  "rotocol.Writer\"\037\n\rS2CAddWriters\022\016\n\006resul"
  "t\030\001 \001(\005\"&\n\020C2SDeleteWriters\022\022\n\nwriterLis"
  "t\030\001 \003(\t\">\n\020C2SUpdateWriters\022*\n\nwriterLis"
  "t\030\001 \003(\0132\026.Protocol.UpdateWriterb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_MsgUser_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_MsgUser_2eproto_sccs[12] = {
  &scc_info_C2SAddWriters_MsgUser_2eproto.base,
  &scc_info_C2SDeleteWriters_MsgUser_2eproto.base,
  &scc_info_C2SLogin_MsgUser_2eproto.base,
  &scc_info_C2SRegister_MsgUser_2eproto.base,
  &scc_info_C2SUpdateWriters_MsgUser_2eproto.base,
  &scc_info_C2SWriter_MsgUser_2eproto.base,
  &scc_info_S2CAddWriters_MsgUser_2eproto.base,
  &scc_info_S2CLogin_MsgUser_2eproto.base,
  &scc_info_S2CRegister_MsgUser_2eproto.base,
  &scc_info_S2CWriter_MsgUser_2eproto.base,
  &scc_info_UpdateWriter_MsgUser_2eproto.base,
  &scc_info_Writer_MsgUser_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MsgUser_2eproto_once;
static bool descriptor_table_MsgUser_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MsgUser_2eproto = {
  &descriptor_table_MsgUser_2eproto_initialized, descriptor_table_protodef_MsgUser_2eproto, "MsgUser.proto", 639,
  &descriptor_table_MsgUser_2eproto_once, descriptor_table_MsgUser_2eproto_sccs, descriptor_table_MsgUser_2eproto_deps, 12, 0,
  schemas, file_default_instances, TableStruct_MsgUser_2eproto::offsets,
  file_level_metadata_MsgUser_2eproto, 12, file_level_enum_descriptors_MsgUser_2eproto, file_level_service_descriptors_MsgUser_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MsgUser_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_MsgUser_2eproto), true);
namespace Protocol {

// ===================================================================

void C2SLogin::InitAsDefaultInstance() {
}
class C2SLogin::_Internal {
 public:
};

C2SLogin::C2SLogin()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SLogin)
}
C2SLogin::C2SLogin(const C2SLogin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account().empty()) {
    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SLogin)
}

void C2SLogin::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SLogin_MsgUser_2eproto.base);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

C2SLogin::~C2SLogin() {
  // @@protoc_insertion_point(destructor:Protocol.C2SLogin)
  SharedDtor();
}

void C2SLogin::SharedDtor() {
  account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2SLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SLogin& C2SLogin::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SLogin_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void C2SLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SLogin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* C2SLogin::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_account();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SLogin.account"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SLogin.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SLogin::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SLogin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SLogin.account");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SLogin.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SLogin)
  return target;
}

size_t C2SLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SLogin)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SLogin::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SLogin* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SLogin)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SLogin)
    MergeFrom(*source);
  }
}

void C2SLogin::MergeFrom(const C2SLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void C2SLogin::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SLogin::CopyFrom(const C2SLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SLogin::IsInitialized() const {
  return true;
}

void C2SLogin::InternalSwap(C2SLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SLogin::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CLogin::InitAsDefaultInstance() {
}
class S2CLogin::_Internal {
 public:
};

S2CLogin::S2CLogin()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CLogin)
}
S2CLogin::S2CLogin(const S2CLogin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account().empty()) {
    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CLogin)
}

void S2CLogin::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CLogin_MsgUser_2eproto.base);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

S2CLogin::~S2CLogin() {
  // @@protoc_insertion_point(destructor:Protocol.S2CLogin)
  SharedDtor();
}

void S2CLogin::SharedDtor() {
  account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void S2CLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CLogin& S2CLogin::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CLogin_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void S2CLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CLogin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

const char* S2CLogin::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_account();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2CLogin.account"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.S2CLogin.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CLogin::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CLogin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2CLogin.account");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2CLogin.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // int32 result = 3;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CLogin)
  return target;
}

size_t S2CLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CLogin)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CLogin::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CLogin* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CLogin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CLogin)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CLogin)
    MergeFrom(*source);
  }
}

void S2CLogin::MergeFrom(const S2CLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void S2CLogin::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CLogin::CopyFrom(const S2CLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CLogin::IsInitialized() const {
  return true;
}

void S2CLogin::InternalSwap(S2CLogin* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CLogin::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SRegister::InitAsDefaultInstance() {
}
class C2SRegister::_Internal {
 public:
};

C2SRegister::C2SRegister()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SRegister)
}
C2SRegister::C2SRegister(const C2SRegister& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account().empty()) {
    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SRegister)
}

void C2SRegister::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SRegister_MsgUser_2eproto.base);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

C2SRegister::~C2SRegister() {
  // @@protoc_insertion_point(destructor:Protocol.C2SRegister)
  SharedDtor();
}

void C2SRegister::SharedDtor() {
  account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void C2SRegister::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SRegister& C2SRegister::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SRegister_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void C2SRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SRegister)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* C2SRegister::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string account = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_account();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SRegister.account"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SRegister.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SRegister::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SRegister)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SRegister.account");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_account(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SRegister.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SRegister)
  return target;
}

size_t C2SRegister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SRegister)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SRegister::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SRegister)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SRegister* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SRegister>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SRegister)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SRegister)
    MergeFrom(*source);
  }
}

void C2SRegister::MergeFrom(const C2SRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SRegister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void C2SRegister::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SRegister::CopyFrom(const C2SRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SRegister::IsInitialized() const {
  return true;
}

void C2SRegister::InternalSwap(C2SRegister* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SRegister::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CRegister::InitAsDefaultInstance() {
}
class S2CRegister::_Internal {
 public:
};

S2CRegister::S2CRegister()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CRegister)
}
S2CRegister::S2CRegister(const S2CRegister& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CRegister)
}

void S2CRegister::SharedCtor() {
  result_ = 0;
}

S2CRegister::~S2CRegister() {
  // @@protoc_insertion_point(destructor:Protocol.S2CRegister)
  SharedDtor();
}

void S2CRegister::SharedDtor() {
}

void S2CRegister::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CRegister& S2CRegister::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CRegister_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void S2CRegister::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CRegister)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

const char* S2CRegister::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CRegister::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CRegister)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CRegister)
  return target;
}

size_t S2CRegister::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CRegister)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CRegister::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CRegister)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CRegister* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CRegister>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CRegister)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CRegister)
    MergeFrom(*source);
  }
}

void S2CRegister::MergeFrom(const S2CRegister& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CRegister)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void S2CRegister::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CRegister::CopyFrom(const S2CRegister& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CRegister)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CRegister::IsInitialized() const {
  return true;
}

void S2CRegister::InternalSwap(S2CRegister* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CRegister::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Writer::InitAsDefaultInstance() {
}
class Writer::_Internal {
 public:
};

Writer::Writer()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Writer)
}
Writer::Writer(const Writer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  sex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sex().empty()) {
    sex_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sex_);
  }
  bh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bh().empty()) {
    bh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bh_);
  }
  birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_birth().empty()) {
    birth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.birth_);
  }
  bmh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bmh().empty()) {
    bmh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bmh_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.Writer)
}

void Writer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Writer_MsgUser_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sex_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bmh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Writer::~Writer() {
  // @@protoc_insertion_point(destructor:Protocol.Writer)
  SharedDtor();
}

void Writer::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sex_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  birth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bmh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Writer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Writer& Writer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Writer_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void Writer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Writer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sex_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  birth_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bmh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Writer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Writer.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sex();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Writer.sex"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BH = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_bh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Writer.BH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string birth = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_birth();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Writer.birth"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BMH = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_bmh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Writer.BMH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Writer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Writer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Writer.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string sex = 2;
  if (this->sex().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sex().data(), static_cast<int>(this->_internal_sex().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Writer.sex");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sex(), target);
  }

  // string BH = 3;
  if (this->bh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bh().data(), static_cast<int>(this->_internal_bh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Writer.BH");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bh(), target);
  }

  // string birth = 4;
  if (this->birth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_birth().data(), static_cast<int>(this->_internal_birth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Writer.birth");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_birth(), target);
  }

  // string BMH = 5;
  if (this->bmh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bmh().data(), static_cast<int>(this->_internal_bmh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Writer.BMH");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_bmh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Writer)
  return target;
}

size_t Writer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Writer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string sex = 2;
  if (this->sex().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sex());
  }

  // string BH = 3;
  if (this->bh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bh());
  }

  // string birth = 4;
  if (this->birth().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_birth());
  }

  // string BMH = 5;
  if (this->bmh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bmh());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Writer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Writer)
  GOOGLE_DCHECK_NE(&from, this);
  const Writer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Writer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Writer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Writer)
    MergeFrom(*source);
  }
}

void Writer::MergeFrom(const Writer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Writer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sex().size() > 0) {

    sex_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sex_);
  }
  if (from.bh().size() > 0) {

    bh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bh_);
  }
  if (from.birth().size() > 0) {

    birth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.birth_);
  }
  if (from.bmh().size() > 0) {

    bmh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bmh_);
  }
}

void Writer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Writer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Writer::CopyFrom(const Writer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Writer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Writer::IsInitialized() const {
  return true;
}

void Writer::InternalSwap(Writer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sex_.Swap(&other->sex_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bh_.Swap(&other->bh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  birth_.Swap(&other->birth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bmh_.Swap(&other->bmh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Writer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateWriter::InitAsDefaultInstance() {
  ::Protocol::_UpdateWriter_default_instance_._instance.get_mutable()->writer_ = const_cast< ::Protocol::Writer*>(
      ::Protocol::Writer::internal_default_instance());
}
class UpdateWriter::_Internal {
 public:
  static const ::Protocol::Writer& writer(const UpdateWriter* msg);
};

const ::Protocol::Writer&
UpdateWriter::_Internal::writer(const UpdateWriter* msg) {
  return *msg->writer_;
}
UpdateWriter::UpdateWriter()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.UpdateWriter)
}
UpdateWriter::UpdateWriter(const UpdateWriter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldbh().empty()) {
    oldbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldbh_);
  }
  if (from._internal_has_writer()) {
    writer_ = new ::Protocol::Writer(*from.writer_);
  } else {
    writer_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UpdateWriter)
}

void UpdateWriter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateWriter_MsgUser_2eproto.base);
  oldbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  writer_ = nullptr;
}

UpdateWriter::~UpdateWriter() {
  // @@protoc_insertion_point(destructor:Protocol.UpdateWriter)
  SharedDtor();
}

void UpdateWriter::SharedDtor() {
  oldbh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete writer_;
}

void UpdateWriter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateWriter& UpdateWriter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateWriter_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void UpdateWriter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UpdateWriter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldbh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && writer_ != nullptr) {
    delete writer_;
  }
  writer_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateWriter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string oldBH = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_oldbh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.UpdateWriter.oldBH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.Writer writer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_writer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateWriter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UpdateWriter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oldBH = 1;
  if (this->oldbh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldbh().data(), static_cast<int>(this->_internal_oldbh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UpdateWriter.oldBH");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_oldbh(), target);
  }

  // .Protocol.Writer writer = 2;
  if (this->has_writer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::writer(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UpdateWriter)
  return target;
}

size_t UpdateWriter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UpdateWriter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oldBH = 1;
  if (this->oldbh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldbh());
  }

  // .Protocol.Writer writer = 2;
  if (this->has_writer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *writer_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateWriter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.UpdateWriter)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateWriter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateWriter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.UpdateWriter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.UpdateWriter)
    MergeFrom(*source);
  }
}

void UpdateWriter::MergeFrom(const UpdateWriter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UpdateWriter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldbh().size() > 0) {

    oldbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldbh_);
  }
  if (from.has_writer()) {
    _internal_mutable_writer()->::Protocol::Writer::MergeFrom(from._internal_writer());
  }
}

void UpdateWriter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.UpdateWriter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateWriter::CopyFrom(const UpdateWriter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UpdateWriter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateWriter::IsInitialized() const {
  return true;
}

void UpdateWriter::InternalSwap(UpdateWriter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oldbh_.Swap(&other->oldbh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(writer_, other->writer_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateWriter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SWriter::InitAsDefaultInstance() {
}
class C2SWriter::_Internal {
 public:
};

C2SWriter::C2SWriter()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SWriter)
}
C2SWriter::C2SWriter(const C2SWriter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SWriter)
}

void C2SWriter::SharedCtor() {
  request_ = 0;
}

C2SWriter::~C2SWriter() {
  // @@protoc_insertion_point(destructor:Protocol.C2SWriter)
  SharedDtor();
}

void C2SWriter::SharedDtor() {
}

void C2SWriter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SWriter& C2SWriter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SWriter_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void C2SWriter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SWriter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SWriter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SWriter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SWriter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SWriter)
  return target;
}

size_t C2SWriter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SWriter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SWriter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SWriter)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SWriter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SWriter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SWriter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SWriter)
    MergeFrom(*source);
  }
}

void C2SWriter::MergeFrom(const C2SWriter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SWriter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SWriter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SWriter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SWriter::CopyFrom(const C2SWriter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SWriter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SWriter::IsInitialized() const {
  return true;
}

void C2SWriter::InternalSwap(C2SWriter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SWriter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CWriter::InitAsDefaultInstance() {
}
class S2CWriter::_Internal {
 public:
};

S2CWriter::S2CWriter()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CWriter)
}
S2CWriter::S2CWriter(const S2CWriter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      writerlist_(from.writerlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CWriter)
}

void S2CWriter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CWriter_MsgUser_2eproto.base);
}

S2CWriter::~S2CWriter() {
  // @@protoc_insertion_point(destructor:Protocol.S2CWriter)
  SharedDtor();
}

void S2CWriter::SharedDtor() {
}

void S2CWriter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CWriter& S2CWriter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CWriter_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void S2CWriter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CWriter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writerlist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CWriter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.Writer writerList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_writerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CWriter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CWriter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.Writer writerList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_writerlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_writerlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CWriter)
  return target;
}

size_t S2CWriter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CWriter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.Writer writerList = 1;
  total_size += 1UL * this->_internal_writerlist_size();
  for (const auto& msg : this->writerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CWriter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CWriter)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CWriter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CWriter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CWriter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CWriter)
    MergeFrom(*source);
  }
}

void S2CWriter::MergeFrom(const S2CWriter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CWriter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writerlist_.MergeFrom(from.writerlist_);
}

void S2CWriter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CWriter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CWriter::CopyFrom(const S2CWriter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CWriter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CWriter::IsInitialized() const {
  return true;
}

void S2CWriter::InternalSwap(S2CWriter* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  writerlist_.InternalSwap(&other->writerlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CWriter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddWriters::InitAsDefaultInstance() {
}
class C2SAddWriters::_Internal {
 public:
};

C2SAddWriters::C2SAddWriters()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddWriters)
}
C2SAddWriters::C2SAddWriters(const C2SAddWriters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      writerlist_(from.writerlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddWriters)
}

void C2SAddWriters::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddWriters_MsgUser_2eproto.base);
}

C2SAddWriters::~C2SAddWriters() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddWriters)
  SharedDtor();
}

void C2SAddWriters::SharedDtor() {
}

void C2SAddWriters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddWriters& C2SAddWriters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddWriters_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void C2SAddWriters::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writerlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddWriters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.Writer writerList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_writerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddWriters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.Writer writerList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_writerlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_writerlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddWriters)
  return target;
}

size_t C2SAddWriters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddWriters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.Writer writerList = 1;
  total_size += 1UL * this->_internal_writerlist_size();
  for (const auto& msg : this->writerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddWriters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddWriters)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddWriters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddWriters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddWriters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddWriters)
    MergeFrom(*source);
  }
}

void C2SAddWriters::MergeFrom(const C2SAddWriters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddWriters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writerlist_.MergeFrom(from.writerlist_);
}

void C2SAddWriters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddWriters::CopyFrom(const C2SAddWriters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddWriters::IsInitialized() const {
  return true;
}

void C2SAddWriters::InternalSwap(C2SAddWriters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  writerlist_.InternalSwap(&other->writerlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddWriters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CAddWriters::InitAsDefaultInstance() {
}
class S2CAddWriters::_Internal {
 public:
};

S2CAddWriters::S2CAddWriters()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CAddWriters)
}
S2CAddWriters::S2CAddWriters(const S2CAddWriters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CAddWriters)
}

void S2CAddWriters::SharedCtor() {
  result_ = 0;
}

S2CAddWriters::~S2CAddWriters() {
  // @@protoc_insertion_point(destructor:Protocol.S2CAddWriters)
  SharedDtor();
}

void S2CAddWriters::SharedDtor() {
}

void S2CAddWriters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CAddWriters& S2CAddWriters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CAddWriters_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void S2CAddWriters::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CAddWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear();
}

const char* S2CAddWriters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CAddWriters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CAddWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CAddWriters)
  return target;
}

size_t S2CAddWriters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CAddWriters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CAddWriters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CAddWriters)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CAddWriters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CAddWriters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CAddWriters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CAddWriters)
    MergeFrom(*source);
  }
}

void S2CAddWriters::MergeFrom(const S2CAddWriters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CAddWriters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void S2CAddWriters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CAddWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CAddWriters::CopyFrom(const S2CAddWriters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CAddWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CAddWriters::IsInitialized() const {
  return true;
}

void S2CAddWriters::InternalSwap(S2CAddWriters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CAddWriters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDeleteWriters::InitAsDefaultInstance() {
}
class C2SDeleteWriters::_Internal {
 public:
};

C2SDeleteWriters::C2SDeleteWriters()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDeleteWriters)
}
C2SDeleteWriters::C2SDeleteWriters(const C2SDeleteWriters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      writerlist_(from.writerlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDeleteWriters)
}

void C2SDeleteWriters::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SDeleteWriters_MsgUser_2eproto.base);
}

C2SDeleteWriters::~C2SDeleteWriters() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDeleteWriters)
  SharedDtor();
}

void C2SDeleteWriters::SharedDtor() {
}

void C2SDeleteWriters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDeleteWriters& C2SDeleteWriters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDeleteWriters_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void C2SDeleteWriters::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDeleteWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writerlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SDeleteWriters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string writerList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_writerlist();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SDeleteWriters.writerList"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDeleteWriters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDeleteWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string writerList = 1;
  for (int i = 0, n = this->_internal_writerlist_size(); i < n; i++) {
    const auto& s = this->_internal_writerlist(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SDeleteWriters.writerList");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDeleteWriters)
  return target;
}

size_t C2SDeleteWriters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDeleteWriters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string writerList = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(writerlist_.size());
  for (int i = 0, n = writerlist_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      writerlist_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDeleteWriters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDeleteWriters)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDeleteWriters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDeleteWriters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDeleteWriters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDeleteWriters)
    MergeFrom(*source);
  }
}

void C2SDeleteWriters::MergeFrom(const C2SDeleteWriters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDeleteWriters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writerlist_.MergeFrom(from.writerlist_);
}

void C2SDeleteWriters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDeleteWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteWriters::CopyFrom(const C2SDeleteWriters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDeleteWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteWriters::IsInitialized() const {
  return true;
}

void C2SDeleteWriters::InternalSwap(C2SDeleteWriters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  writerlist_.InternalSwap(&other->writerlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDeleteWriters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SUpdateWriters::InitAsDefaultInstance() {
}
class C2SUpdateWriters::_Internal {
 public:
};

C2SUpdateWriters::C2SUpdateWriters()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SUpdateWriters)
}
C2SUpdateWriters::C2SUpdateWriters(const C2SUpdateWriters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      writerlist_(from.writerlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SUpdateWriters)
}

void C2SUpdateWriters::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SUpdateWriters_MsgUser_2eproto.base);
}

C2SUpdateWriters::~C2SUpdateWriters() {
  // @@protoc_insertion_point(destructor:Protocol.C2SUpdateWriters)
  SharedDtor();
}

void C2SUpdateWriters::SharedDtor() {
}

void C2SUpdateWriters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SUpdateWriters& C2SUpdateWriters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SUpdateWriters_MsgUser_2eproto.base);
  return *internal_default_instance();
}


void C2SUpdateWriters::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SUpdateWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writerlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SUpdateWriters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.UpdateWriter writerList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_writerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SUpdateWriters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SUpdateWriters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.UpdateWriter writerList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_writerlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_writerlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SUpdateWriters)
  return target;
}

size_t C2SUpdateWriters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SUpdateWriters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.UpdateWriter writerList = 1;
  total_size += 1UL * this->_internal_writerlist_size();
  for (const auto& msg : this->writerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SUpdateWriters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SUpdateWriters)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SUpdateWriters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SUpdateWriters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SUpdateWriters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SUpdateWriters)
    MergeFrom(*source);
  }
}

void C2SUpdateWriters::MergeFrom(const C2SUpdateWriters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SUpdateWriters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writerlist_.MergeFrom(from.writerlist_);
}

void C2SUpdateWriters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SUpdateWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUpdateWriters::CopyFrom(const C2SUpdateWriters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SUpdateWriters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUpdateWriters::IsInitialized() const {
  return true;
}

void C2SUpdateWriters::InternalSwap(C2SUpdateWriters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  writerlist_.InternalSwap(&other->writerlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SUpdateWriters::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::C2SLogin* Arena::CreateMaybeMessage< ::Protocol::C2SLogin >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CLogin* Arena::CreateMaybeMessage< ::Protocol::S2CLogin >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CLogin >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SRegister* Arena::CreateMaybeMessage< ::Protocol::C2SRegister >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SRegister >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CRegister* Arena::CreateMaybeMessage< ::Protocol::S2CRegister >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CRegister >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::Writer* Arena::CreateMaybeMessage< ::Protocol::Writer >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::Writer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UpdateWriter* Arena::CreateMaybeMessage< ::Protocol::UpdateWriter >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::UpdateWriter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SWriter* Arena::CreateMaybeMessage< ::Protocol::C2SWriter >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SWriter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CWriter* Arena::CreateMaybeMessage< ::Protocol::S2CWriter >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CWriter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddWriters* Arena::CreateMaybeMessage< ::Protocol::C2SAddWriters >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddWriters >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CAddWriters* Arena::CreateMaybeMessage< ::Protocol::S2CAddWriters >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CAddWriters >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDeleteWriters* Arena::CreateMaybeMessage< ::Protocol::C2SDeleteWriters >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDeleteWriters >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SUpdateWriters* Arena::CreateMaybeMessage< ::Protocol::C2SUpdateWriters >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SUpdateWriters >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
