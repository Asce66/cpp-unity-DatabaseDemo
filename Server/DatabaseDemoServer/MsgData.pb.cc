// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgData.proto

#include "MsgData.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Book_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Department_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DoWeiWen_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DoYanTao_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateBook_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateDepartment_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateDoYanTao_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateWeiWen_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateYanTao_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WeiWen_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WriteBook_MsgData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MsgData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_YanTao_MsgData_2eproto;
namespace Protocol {
class DepartmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Department> _instance;
} _Department_default_instance_;
class C2SDepartmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDepartment> _instance;
} _C2SDepartment_default_instance_;
class S2CDepartmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CDepartment> _instance;
} _S2CDepartment_default_instance_;
class C2SAddDepartmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddDepartment> _instance;
} _C2SAddDepartment_default_instance_;
class UpdateDepartmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateDepartment> _instance;
} _UpdateDepartment_default_instance_;
class C2SUpdateDepartmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SUpdateDepartment> _instance;
} _C2SUpdateDepartment_default_instance_;
class C2SDeleteDepartmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDeleteDepartment> _instance;
} _C2SDeleteDepartment_default_instance_;
class BookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Book> _instance;
} _Book_default_instance_;
class C2SBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SBook> _instance;
} _C2SBook_default_instance_;
class S2CBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CBook> _instance;
} _S2CBook_default_instance_;
class C2SAddBooksDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddBooks> _instance;
} _C2SAddBooks_default_instance_;
class C2SDeleteBooksDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDeleteBooks> _instance;
} _C2SDeleteBooks_default_instance_;
class UpdateBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateBook> _instance;
} _UpdateBook_default_instance_;
class C2SUpdateBooksDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SUpdateBooks> _instance;
} _C2SUpdateBooks_default_instance_;
class YanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<YanTao> _instance;
} _YanTao_default_instance_;
class C2SYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SYanTao> _instance;
} _C2SYanTao_default_instance_;
class S2CYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CYanTao> _instance;
} _S2CYanTao_default_instance_;
class C2SAddYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddYanTao> _instance;
} _C2SAddYanTao_default_instance_;
class UpdateYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateYanTao> _instance;
} _UpdateYanTao_default_instance_;
class C2SUpdateYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SUpdateYanTao> _instance;
} _C2SUpdateYanTao_default_instance_;
class C2SDeleteYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDeleteYanTao> _instance;
} _C2SDeleteYanTao_default_instance_;
class WeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WeiWen> _instance;
} _WeiWen_default_instance_;
class C2SWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SWeiWen> _instance;
} _C2SWeiWen_default_instance_;
class S2CWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CWeiWen> _instance;
} _S2CWeiWen_default_instance_;
class C2SAddWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddWeiWen> _instance;
} _C2SAddWeiWen_default_instance_;
class UpdateWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateWeiWen> _instance;
} _UpdateWeiWen_default_instance_;
class C2SUpdateWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SUpdateWeiWen> _instance;
} _C2SUpdateWeiWen_default_instance_;
class C2SDeleteWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDeleteWeiWen> _instance;
} _C2SDeleteWeiWen_default_instance_;
class WriteBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WriteBook> _instance;
} _WriteBook_default_instance_;
class C2SWriteBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SWriteBook> _instance;
} _C2SWriteBook_default_instance_;
class S2CWriteBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CWriteBook> _instance;
} _S2CWriteBook_default_instance_;
class C2SSearchWriteBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SSearchWriteBook> _instance;
} _C2SSearchWriteBook_default_instance_;
class S2CSearchWriteBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CSearchWriteBook> _instance;
} _S2CSearchWriteBook_default_instance_;
class C2SAddWriteBookDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddWriteBook> _instance;
} _C2SAddWriteBook_default_instance_;
class DoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DoYanTao> _instance;
} _DoYanTao_default_instance_;
class C2SDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDoYanTao> _instance;
} _C2SDoYanTao_default_instance_;
class S2CDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CDoYanTao> _instance;
} _S2CDoYanTao_default_instance_;
class C2SSearchDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SSearchDoYanTao> _instance;
} _C2SSearchDoYanTao_default_instance_;
class S2CSearchDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CSearchDoYanTao> _instance;
} _S2CSearchDoYanTao_default_instance_;
class C2SAddDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddDoYanTao> _instance;
} _C2SAddDoYanTao_default_instance_;
class UpdateDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateDoYanTao> _instance;
} _UpdateDoYanTao_default_instance_;
class C2SUpdateDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SUpdateDoYanTao> _instance;
} _C2SUpdateDoYanTao_default_instance_;
class C2SDeleteDoYanTaoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDeleteDoYanTao> _instance;
} _C2SDeleteDoYanTao_default_instance_;
class DoWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DoWeiWen> _instance;
} _DoWeiWen_default_instance_;
class C2SDoWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SDoWeiWen> _instance;
} _C2SDoWeiWen_default_instance_;
class S2cDoWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2cDoWeiWen> _instance;
} _S2cDoWeiWen_default_instance_;
class C2SSearchDoWeiwenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SSearchDoWeiwen> _instance;
} _C2SSearchDoWeiwen_default_instance_;
class S2CSearchDoWeiwenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<S2CSearchDoWeiwen> _instance;
} _S2CSearchDoWeiwen_default_instance_;
class C2SAddDoWeiWenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2SAddDoWeiWen> _instance;
} _C2SAddDoWeiWen_default_instance_;
}  // namespace Protocol
static void InitDefaultsscc_info_Book_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_Book_default_instance_;
    new (ptr) ::Protocol::Book();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Book::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Book_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Book_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SAddBooks_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddBooks_default_instance_;
    new (ptr) ::Protocol::C2SAddBooks();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddBooks::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddBooks_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddBooks_MsgData_2eproto}, {
      &scc_info_Book_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SAddDepartment_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddDepartment_default_instance_;
    new (ptr) ::Protocol::C2SAddDepartment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddDepartment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddDepartment_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddDepartment_MsgData_2eproto}, {
      &scc_info_Department_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SAddDoWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddDoWeiWen_default_instance_;
    new (ptr) ::Protocol::C2SAddDoWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddDoWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddDoWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddDoWeiWen_MsgData_2eproto}, {
      &scc_info_DoWeiWen_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SAddDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddDoYanTao_default_instance_;
    new (ptr) ::Protocol::C2SAddDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddDoYanTao_MsgData_2eproto}, {
      &scc_info_DoYanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SAddWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddWeiWen_default_instance_;
    new (ptr) ::Protocol::C2SAddWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddWeiWen_MsgData_2eproto}, {
      &scc_info_WeiWen_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SAddWriteBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddWriteBook_default_instance_;
    new (ptr) ::Protocol::C2SAddWriteBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddWriteBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddWriteBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddWriteBook_MsgData_2eproto}, {
      &scc_info_WriteBook_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SAddYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SAddYanTao_default_instance_;
    new (ptr) ::Protocol::C2SAddYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SAddYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SAddYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SAddYanTao_MsgData_2eproto}, {
      &scc_info_YanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SBook_default_instance_;
    new (ptr) ::Protocol::C2SBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SBook_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDeleteBooks_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDeleteBooks_default_instance_;
    new (ptr) ::Protocol::C2SDeleteBooks();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDeleteBooks::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDeleteBooks_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDeleteBooks_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDeleteDepartment_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDeleteDepartment_default_instance_;
    new (ptr) ::Protocol::C2SDeleteDepartment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDeleteDepartment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDeleteDepartment_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDeleteDepartment_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDeleteDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDeleteDoYanTao_default_instance_;
    new (ptr) ::Protocol::C2SDeleteDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDeleteDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDeleteDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDeleteDoYanTao_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDeleteWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDeleteWeiWen_default_instance_;
    new (ptr) ::Protocol::C2SDeleteWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDeleteWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDeleteWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDeleteWeiWen_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDeleteYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDeleteYanTao_default_instance_;
    new (ptr) ::Protocol::C2SDeleteYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDeleteYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDeleteYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDeleteYanTao_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDepartment_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDepartment_default_instance_;
    new (ptr) ::Protocol::C2SDepartment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDepartment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDepartment_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDepartment_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDoWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDoWeiWen_default_instance_;
    new (ptr) ::Protocol::C2SDoWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDoWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDoWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDoWeiWen_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SDoYanTao_default_instance_;
    new (ptr) ::Protocol::C2SDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SDoYanTao_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SSearchDoWeiwen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SSearchDoWeiwen_default_instance_;
    new (ptr) ::Protocol::C2SSearchDoWeiwen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SSearchDoWeiwen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SSearchDoWeiwen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SSearchDoWeiwen_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SSearchDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SSearchDoYanTao_default_instance_;
    new (ptr) ::Protocol::C2SSearchDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SSearchDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SSearchDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SSearchDoYanTao_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SSearchWriteBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SSearchWriteBook_default_instance_;
    new (ptr) ::Protocol::C2SSearchWriteBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SSearchWriteBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SSearchWriteBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SSearchWriteBook_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SUpdateBooks_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SUpdateBooks_default_instance_;
    new (ptr) ::Protocol::C2SUpdateBooks();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SUpdateBooks::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SUpdateBooks_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SUpdateBooks_MsgData_2eproto}, {
      &scc_info_UpdateBook_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SUpdateDepartment_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SUpdateDepartment_default_instance_;
    new (ptr) ::Protocol::C2SUpdateDepartment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SUpdateDepartment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SUpdateDepartment_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SUpdateDepartment_MsgData_2eproto}, {
      &scc_info_UpdateDepartment_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SUpdateDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SUpdateDoYanTao_default_instance_;
    new (ptr) ::Protocol::C2SUpdateDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SUpdateDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SUpdateDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SUpdateDoYanTao_MsgData_2eproto}, {
      &scc_info_UpdateDoYanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SUpdateWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SUpdateWeiWen_default_instance_;
    new (ptr) ::Protocol::C2SUpdateWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SUpdateWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SUpdateWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SUpdateWeiWen_MsgData_2eproto}, {
      &scc_info_UpdateWeiWen_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SUpdateYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SUpdateYanTao_default_instance_;
    new (ptr) ::Protocol::C2SUpdateYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SUpdateYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_C2SUpdateYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_C2SUpdateYanTao_MsgData_2eproto}, {
      &scc_info_UpdateYanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_C2SWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SWeiWen_default_instance_;
    new (ptr) ::Protocol::C2SWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SWeiWen_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SWriteBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SWriteBook_default_instance_;
    new (ptr) ::Protocol::C2SWriteBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SWriteBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SWriteBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SWriteBook_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_C2SYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_C2SYanTao_default_instance_;
    new (ptr) ::Protocol::C2SYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::C2SYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2SYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2SYanTao_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_Department_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_Department_default_instance_;
    new (ptr) ::Protocol::Department();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::Department::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Department_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Department_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_DoWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_DoWeiWen_default_instance_;
    new (ptr) ::Protocol::DoWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::DoWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DoWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DoWeiWen_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_DoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_DoYanTao_default_instance_;
    new (ptr) ::Protocol::DoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::DoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DoYanTao_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_S2CBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CBook_default_instance_;
    new (ptr) ::Protocol::S2CBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CBook_MsgData_2eproto}, {
      &scc_info_Book_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CDepartment_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CDepartment_default_instance_;
    new (ptr) ::Protocol::S2CDepartment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CDepartment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CDepartment_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CDepartment_MsgData_2eproto}, {
      &scc_info_Department_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CDoYanTao_default_instance_;
    new (ptr) ::Protocol::S2CDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CDoYanTao_MsgData_2eproto}, {
      &scc_info_YanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CSearchDoWeiwen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CSearchDoWeiwen_default_instance_;
    new (ptr) ::Protocol::S2CSearchDoWeiwen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CSearchDoWeiwen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CSearchDoWeiwen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CSearchDoWeiwen_MsgData_2eproto}, {
      &scc_info_DoWeiWen_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CSearchDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CSearchDoYanTao_default_instance_;
    new (ptr) ::Protocol::S2CSearchDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CSearchDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CSearchDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CSearchDoYanTao_MsgData_2eproto}, {
      &scc_info_DoYanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CSearchWriteBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CSearchWriteBook_default_instance_;
    new (ptr) ::Protocol::S2CSearchWriteBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CSearchWriteBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CSearchWriteBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CSearchWriteBook_MsgData_2eproto}, {
      &scc_info_WriteBook_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CWeiWen_default_instance_;
    new (ptr) ::Protocol::S2CWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CWeiWen_MsgData_2eproto}, {
      &scc_info_WeiWen_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CWriteBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CWriteBook_default_instance_;
    new (ptr) ::Protocol::S2CWriteBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CWriteBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CWriteBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CWriteBook_MsgData_2eproto}, {
      &scc_info_Book_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2CYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2CYanTao_default_instance_;
    new (ptr) ::Protocol::S2CYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2CYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2CYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2CYanTao_MsgData_2eproto}, {
      &scc_info_YanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_S2cDoWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_S2cDoWeiWen_default_instance_;
    new (ptr) ::Protocol::S2cDoWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::S2cDoWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_S2cDoWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_S2cDoWeiWen_MsgData_2eproto}, {
      &scc_info_WeiWen_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_UpdateBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_UpdateBook_default_instance_;
    new (ptr) ::Protocol::UpdateBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::UpdateBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateBook_MsgData_2eproto}, {
      &scc_info_Book_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_UpdateDepartment_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_UpdateDepartment_default_instance_;
    new (ptr) ::Protocol::UpdateDepartment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::UpdateDepartment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateDepartment_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateDepartment_MsgData_2eproto}, {
      &scc_info_Department_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_UpdateDoYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_UpdateDoYanTao_default_instance_;
    new (ptr) ::Protocol::UpdateDoYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::UpdateDoYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateDoYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateDoYanTao_MsgData_2eproto}, {
      &scc_info_DoYanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_UpdateWeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_UpdateWeiWen_default_instance_;
    new (ptr) ::Protocol::UpdateWeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::UpdateWeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateWeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateWeiWen_MsgData_2eproto}, {
      &scc_info_WeiWen_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_UpdateYanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_UpdateYanTao_default_instance_;
    new (ptr) ::Protocol::UpdateYanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::UpdateYanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateYanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateYanTao_MsgData_2eproto}, {
      &scc_info_YanTao_MsgData_2eproto.base,}};

static void InitDefaultsscc_info_WeiWen_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_WeiWen_default_instance_;
    new (ptr) ::Protocol::WeiWen();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::WeiWen::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WeiWen_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WeiWen_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_WriteBook_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_WriteBook_default_instance_;
    new (ptr) ::Protocol::WriteBook();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::WriteBook::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WriteBook_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WriteBook_MsgData_2eproto}, {}};

static void InitDefaultsscc_info_YanTao_MsgData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Protocol::_YanTao_default_instance_;
    new (ptr) ::Protocol::YanTao();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Protocol::YanTao::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_YanTao_MsgData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_YanTao_MsgData_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MsgData_2eproto[49];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_MsgData_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MsgData_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MsgData_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::Department, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::Department, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Department, bmh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDepartment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDepartment, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CDepartment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CDepartment, departmentlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddDepartment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddDepartment, departmentlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateDepartment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateDepartment, department_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateDepartment, oldbh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateDepartment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateDepartment, departmentlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteDepartment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteDepartment, bhlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::Book, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::Book, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Book, time_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Book, bh_),
  PROTOBUF_FIELD_OFFSET(::Protocol::Book, price_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SBook, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CBook, booklist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddBooks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddBooks, booklist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteBooks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteBooks, bhlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateBook, oldbh_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateBook, book_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateBooks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateBooks, booklist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::YanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::YanTao, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::YanTao, content_),
  PROTOBUF_FIELD_OFFSET(::Protocol::YanTao, time_),
  PROTOBUF_FIELD_OFFSET(::Protocol::YanTao, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SYanTao, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CYanTao, yantaolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddYanTao, yantaolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateYanTao, yantao_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateYanTao, oldname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateYanTao, yantaolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteYanTao, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::WeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::WeiWen, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::WeiWen, time_),
  PROTOBUF_FIELD_OFFSET(::Protocol::WeiWen, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SWeiWen, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CWeiWen, weiwenlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddWeiWen, weiwenlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateWeiWen, weiwen_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateWeiWen, oldname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateWeiWen, weiwenlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteWeiWen, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::WriteBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::WriteBook, bbh_),
  PROTOBUF_FIELD_OFFSET(::Protocol::WriteBook, sbh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SWriteBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SWriteBook, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CWriteBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CWriteBook, writebooklist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SSearchWriteBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SSearchWriteBook, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CSearchWriteBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CSearchWriteBook, writebooklist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddWriteBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddWriteBook, writebooklist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::DoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::DoYanTao, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::DoYanTao, sbh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDoYanTao, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CDoYanTao, doyantaolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SSearchDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SSearchDoYanTao, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CSearchDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CSearchDoYanTao, doyantaolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddDoYanTao, doyantaolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateDoYanTao, yantao_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UpdateDoYanTao, oldname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SUpdateDoYanTao, yantaolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteDoYanTao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDeleteDoYanTao, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::DoWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::DoWeiWen, name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::DoWeiWen, sbh_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDoWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SDoWeiWen, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2cDoWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2cDoWeiWen, doweiwenlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SSearchDoWeiwen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SSearchDoWeiwen, request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CSearchDoWeiwen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2CSearchDoWeiwen, doweiwenlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddDoWeiWen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2SAddDoWeiWen, doweiwenlist_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Protocol::Department)},
  { 7, -1, sizeof(::Protocol::C2SDepartment)},
  { 13, -1, sizeof(::Protocol::S2CDepartment)},
  { 19, -1, sizeof(::Protocol::C2SAddDepartment)},
  { 25, -1, sizeof(::Protocol::UpdateDepartment)},
  { 32, -1, sizeof(::Protocol::C2SUpdateDepartment)},
  { 38, -1, sizeof(::Protocol::C2SDeleteDepartment)},
  { 44, -1, sizeof(::Protocol::Book)},
  { 53, -1, sizeof(::Protocol::C2SBook)},
  { 59, -1, sizeof(::Protocol::S2CBook)},
  { 65, -1, sizeof(::Protocol::C2SAddBooks)},
  { 71, -1, sizeof(::Protocol::C2SDeleteBooks)},
  { 77, -1, sizeof(::Protocol::UpdateBook)},
  { 84, -1, sizeof(::Protocol::C2SUpdateBooks)},
  { 90, -1, sizeof(::Protocol::YanTao)},
  { 99, -1, sizeof(::Protocol::C2SYanTao)},
  { 105, -1, sizeof(::Protocol::S2CYanTao)},
  { 111, -1, sizeof(::Protocol::C2SAddYanTao)},
  { 117, -1, sizeof(::Protocol::UpdateYanTao)},
  { 124, -1, sizeof(::Protocol::C2SUpdateYanTao)},
  { 130, -1, sizeof(::Protocol::C2SDeleteYanTao)},
  { 136, -1, sizeof(::Protocol::WeiWen)},
  { 144, -1, sizeof(::Protocol::C2SWeiWen)},
  { 150, -1, sizeof(::Protocol::S2CWeiWen)},
  { 156, -1, sizeof(::Protocol::C2SAddWeiWen)},
  { 162, -1, sizeof(::Protocol::UpdateWeiWen)},
  { 169, -1, sizeof(::Protocol::C2SUpdateWeiWen)},
  { 175, -1, sizeof(::Protocol::C2SDeleteWeiWen)},
  { 181, -1, sizeof(::Protocol::WriteBook)},
  { 188, -1, sizeof(::Protocol::C2SWriteBook)},
  { 194, -1, sizeof(::Protocol::S2CWriteBook)},
  { 200, -1, sizeof(::Protocol::C2SSearchWriteBook)},
  { 206, -1, sizeof(::Protocol::S2CSearchWriteBook)},
  { 212, -1, sizeof(::Protocol::C2SAddWriteBook)},
  { 218, -1, sizeof(::Protocol::DoYanTao)},
  { 225, -1, sizeof(::Protocol::C2SDoYanTao)},
  { 231, -1, sizeof(::Protocol::S2CDoYanTao)},
  { 237, -1, sizeof(::Protocol::C2SSearchDoYanTao)},
  { 243, -1, sizeof(::Protocol::S2CSearchDoYanTao)},
  { 249, -1, sizeof(::Protocol::C2SAddDoYanTao)},
  { 255, -1, sizeof(::Protocol::UpdateDoYanTao)},
  { 262, -1, sizeof(::Protocol::C2SUpdateDoYanTao)},
  { 268, -1, sizeof(::Protocol::C2SDeleteDoYanTao)},
  { 274, -1, sizeof(::Protocol::DoWeiWen)},
  { 281, -1, sizeof(::Protocol::C2SDoWeiWen)},
  { 287, -1, sizeof(::Protocol::S2cDoWeiWen)},
  { 293, -1, sizeof(::Protocol::C2SSearchDoWeiwen)},
  { 299, -1, sizeof(::Protocol::S2CSearchDoWeiwen)},
  { 305, -1, sizeof(::Protocol::C2SAddDoWeiWen)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_Department_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDepartment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CDepartment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddDepartment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_UpdateDepartment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SUpdateDepartment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDeleteDepartment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_Book_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddBooks_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDeleteBooks_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_UpdateBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SUpdateBooks_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_YanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_UpdateYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SUpdateYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDeleteYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_WeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_UpdateWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SUpdateWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDeleteWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_WriteBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SWriteBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CWriteBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SSearchWriteBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CSearchWriteBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddWriteBook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_DoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SSearchDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CSearchDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_UpdateDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SUpdateDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDeleteDoYanTao_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_DoWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SDoWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2cDoWeiWen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SSearchDoWeiwen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_S2CSearchDoWeiwen_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Protocol::_C2SAddDoWeiWen_default_instance_),
};

const char descriptor_table_protodef_MsgData_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rMsgData.proto\022\010Protocol\"\'\n\nDepartment\022"
  "\014\n\004name\030\001 \001(\t\022\013\n\003BMH\030\002 \001(\t\" \n\rC2SDepartm"
  "ent\022\017\n\007request\030\001 \001(\005\"=\n\rS2CDepartment\022,\n"
  "\016departmentList\030\001 \003(\0132\024.Protocol.Departm"
  "ent\"@\n\020C2SAddDepartment\022,\n\016departmentLis"
  "t\030\001 \003(\0132\024.Protocol.Department\"K\n\020UpdateD"
  "epartment\022(\n\ndepartment\030\001 \001(\0132\024.Protocol"
  ".Department\022\r\n\005oldBH\030\002 \001(\t\"I\n\023C2SUpdateD"
  "epartment\0222\n\016departmentList\030\001 \003(\0132\032.Prot"
  "ocol.UpdateDepartment\"%\n\023C2SDeleteDepart"
  "ment\022\016\n\006bhList\030\001 \003(\t\"=\n\004Book\022\014\n\004name\030\001 \001"
  "(\t\022\014\n\004time\030\002 \001(\t\022\n\n\002BH\030\003 \001(\t\022\r\n\005price\030\004 "
  "\001(\002\"\032\n\007C2SBook\022\017\n\007request\030\001 \001(\005\"+\n\007S2CBo"
  "ok\022 \n\010bookList\030\001 \003(\0132\016.Protocol.Book\"/\n\013"
  "C2SAddBooks\022 \n\010bookList\030\001 \003(\0132\016.Protocol"
  ".Book\" \n\016C2SDeleteBooks\022\016\n\006bhList\030\001 \003(\t\""
  "9\n\nUpdateBook\022\r\n\005oldBH\030\001 \001(\t\022\034\n\004book\030\002 \001"
  "(\0132\016.Protocol.Book\"8\n\016C2SUpdateBooks\022&\n\010"
  "bookList\030\001 \003(\0132\024.Protocol.UpdateBook\"F\n\006"
  "YanTao\022\014\n\004name\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\014\n"
  "\004time\030\003 \001(\t\022\017\n\007address\030\004 \001(\t\"\034\n\tC2SYanTa"
  "o\022\017\n\007request\030\001 \001(\005\"1\n\tS2CYanTao\022$\n\nyanTa"
  "oList\030\001 \003(\0132\020.Protocol.YanTao\"4\n\014C2SAddY"
  "anTao\022$\n\nyanTaoList\030\001 \003(\0132\020.Protocol.Yan"
  "Tao\"A\n\014UpdateYanTao\022 \n\006yantao\030\001 \001(\0132\020.Pr"
  "otocol.YanTao\022\017\n\007oldName\030\002 \001(\t\"=\n\017C2SUpd"
  "ateYanTao\022*\n\nyanTaoList\030\001 \003(\0132\026.Protocol"
  ".UpdateYanTao\"\037\n\017C2SDeleteYanTao\022\014\n\004name"
  "\030\001 \003(\t\"5\n\006WeiWen\022\014\n\004name\030\001 \001(\t\022\014\n\004time\030\002"
  " \001(\t\022\017\n\007address\030\003 \001(\t\"\034\n\tC2SWeiWen\022\017\n\007re"
  "quest\030\001 \001(\005\"1\n\tS2CWeiWen\022$\n\nweiWenList\030\001"
  " \003(\0132\020.Protocol.WeiWen\"4\n\014C2SAddWeiWen\022$"
  "\n\nweiWenList\030\001 \003(\0132\020.Protocol.WeiWen\"A\n\014"
  "UpdateWeiWen\022 \n\006weiwen\030\001 \001(\0132\020.Protocol."
  "WeiWen\022\017\n\007oldName\030\002 \001(\t\"=\n\017C2SUpdateWeiW"
  "en\022*\n\nweiWenList\030\001 \003(\0132\026.Protocol.Update"
  "WeiWen\"\037\n\017C2SDeleteWeiWen\022\014\n\004name\030\001 \003(\t\""
  "%\n\tWriteBook\022\013\n\003BBH\030\001 \001(\t\022\013\n\003SBH\030\002 \001(\t\"\037"
  "\n\014C2SWriteBook\022\017\n\007request\030\001 \001(\005\"5\n\014S2CWr"
  "iteBook\022%\n\rwriteBookList\030\001 \003(\0132\016.Protoco"
  "l.Book\"%\n\022C2SSearchWriteBook\022\017\n\007request\030"
  "\001 \001(\005\"@\n\022S2CSearchWriteBook\022*\n\rwriteBook"
  "List\030\001 \003(\0132\023.Protocol.WriteBook\"=\n\017C2SAd"
  "dWriteBook\022*\n\rwriteBookList\030\001 \003(\0132\023.Prot"
  "ocol.WriteBook\"%\n\010DoYanTao\022\014\n\004name\030\001 \001(\t"
  "\022\013\n\003SBH\030\002 \001(\t\"\036\n\013C2SDoYanTao\022\017\n\007request\030"
  "\001 \001(\005\"5\n\013S2CDoYanTao\022&\n\014doYanTaoList\030\001 \003"
  "(\0132\020.Protocol.YanTao\"$\n\021C2SSearchDoYanTa"
  "o\022\017\n\007request\030\001 \001(\005\"=\n\021S2CSearchDoYanTao\022"
  "(\n\014doYanTaoList\030\001 \003(\0132\022.Protocol.DoYanTa"
  "o\":\n\016C2SAddDoYanTao\022(\n\014doYanTaoList\030\001 \003("
  "\0132\022.Protocol.DoYanTao\"E\n\016UpdateDoYanTao\022"
  "\"\n\006yantao\030\001 \001(\0132\022.Protocol.DoYanTao\022\017\n\007o"
  "ldName\030\002 \001(\t\"A\n\021C2SUpdateDoYanTao\022,\n\nyan"
  "TaoList\030\001 \003(\0132\030.Protocol.UpdateDoYanTao\""
  "!\n\021C2SDeleteDoYanTao\022\014\n\004name\030\001 \003(\t\"%\n\010Do"
  "WeiWen\022\014\n\004name\030\001 \001(\t\022\013\n\003SBH\030\002 \001(\t\"\036\n\013C2S"
  "DoWeiWen\022\017\n\007request\030\001 \001(\005\"5\n\013S2cDoWeiWen"
  "\022&\n\014doWeiWenList\030\001 \003(\0132\020.Protocol.WeiWen"
  "\"$\n\021C2SSearchDoWeiwen\022\017\n\007request\030\001 \001(\005\"="
  "\n\021S2CSearchDoWeiwen\022(\n\014doWeiWenList\030\001 \003("
  "\0132\022.Protocol.DoWeiWen\":\n\016C2SAddDoWeiWen\022"
  "(\n\014doWeiWenList\030\001 \003(\0132\022.Protocol.DoWeiWe"
  "nb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_MsgData_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_MsgData_2eproto_sccs[49] = {
  &scc_info_Book_MsgData_2eproto.base,
  &scc_info_C2SAddBooks_MsgData_2eproto.base,
  &scc_info_C2SAddDepartment_MsgData_2eproto.base,
  &scc_info_C2SAddDoWeiWen_MsgData_2eproto.base,
  &scc_info_C2SAddDoYanTao_MsgData_2eproto.base,
  &scc_info_C2SAddWeiWen_MsgData_2eproto.base,
  &scc_info_C2SAddWriteBook_MsgData_2eproto.base,
  &scc_info_C2SAddYanTao_MsgData_2eproto.base,
  &scc_info_C2SBook_MsgData_2eproto.base,
  &scc_info_C2SDeleteBooks_MsgData_2eproto.base,
  &scc_info_C2SDeleteDepartment_MsgData_2eproto.base,
  &scc_info_C2SDeleteDoYanTao_MsgData_2eproto.base,
  &scc_info_C2SDeleteWeiWen_MsgData_2eproto.base,
  &scc_info_C2SDeleteYanTao_MsgData_2eproto.base,
  &scc_info_C2SDepartment_MsgData_2eproto.base,
  &scc_info_C2SDoWeiWen_MsgData_2eproto.base,
  &scc_info_C2SDoYanTao_MsgData_2eproto.base,
  &scc_info_C2SSearchDoWeiwen_MsgData_2eproto.base,
  &scc_info_C2SSearchDoYanTao_MsgData_2eproto.base,
  &scc_info_C2SSearchWriteBook_MsgData_2eproto.base,
  &scc_info_C2SUpdateBooks_MsgData_2eproto.base,
  &scc_info_C2SUpdateDepartment_MsgData_2eproto.base,
  &scc_info_C2SUpdateDoYanTao_MsgData_2eproto.base,
  &scc_info_C2SUpdateWeiWen_MsgData_2eproto.base,
  &scc_info_C2SUpdateYanTao_MsgData_2eproto.base,
  &scc_info_C2SWeiWen_MsgData_2eproto.base,
  &scc_info_C2SWriteBook_MsgData_2eproto.base,
  &scc_info_C2SYanTao_MsgData_2eproto.base,
  &scc_info_Department_MsgData_2eproto.base,
  &scc_info_DoWeiWen_MsgData_2eproto.base,
  &scc_info_DoYanTao_MsgData_2eproto.base,
  &scc_info_S2CBook_MsgData_2eproto.base,
  &scc_info_S2CDepartment_MsgData_2eproto.base,
  &scc_info_S2CDoYanTao_MsgData_2eproto.base,
  &scc_info_S2CSearchDoWeiwen_MsgData_2eproto.base,
  &scc_info_S2CSearchDoYanTao_MsgData_2eproto.base,
  &scc_info_S2CSearchWriteBook_MsgData_2eproto.base,
  &scc_info_S2CWeiWen_MsgData_2eproto.base,
  &scc_info_S2CWriteBook_MsgData_2eproto.base,
  &scc_info_S2CYanTao_MsgData_2eproto.base,
  &scc_info_S2cDoWeiWen_MsgData_2eproto.base,
  &scc_info_UpdateBook_MsgData_2eproto.base,
  &scc_info_UpdateDepartment_MsgData_2eproto.base,
  &scc_info_UpdateDoYanTao_MsgData_2eproto.base,
  &scc_info_UpdateWeiWen_MsgData_2eproto.base,
  &scc_info_UpdateYanTao_MsgData_2eproto.base,
  &scc_info_WeiWen_MsgData_2eproto.base,
  &scc_info_WriteBook_MsgData_2eproto.base,
  &scc_info_YanTao_MsgData_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MsgData_2eproto_once;
static bool descriptor_table_MsgData_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MsgData_2eproto = {
  &descriptor_table_MsgData_2eproto_initialized, descriptor_table_protodef_MsgData_2eproto, "MsgData.proto", 2529,
  &descriptor_table_MsgData_2eproto_once, descriptor_table_MsgData_2eproto_sccs, descriptor_table_MsgData_2eproto_deps, 49, 0,
  schemas, file_default_instances, TableStruct_MsgData_2eproto::offsets,
  file_level_metadata_MsgData_2eproto, 49, file_level_enum_descriptors_MsgData_2eproto, file_level_service_descriptors_MsgData_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MsgData_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_MsgData_2eproto), true);
namespace Protocol {

// ===================================================================

void Department::InitAsDefaultInstance() {
}
class Department::_Internal {
 public:
};

Department::Department()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Department)
}
Department::Department(const Department& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  bmh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bmh().empty()) {
    bmh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bmh_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.Department)
}

void Department::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Department_MsgData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bmh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Department::~Department() {
  // @@protoc_insertion_point(destructor:Protocol.Department)
  SharedDtor();
}

void Department::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bmh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Department::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Department& Department::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Department_MsgData_2eproto.base);
  return *internal_default_instance();
}


void Department::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Department)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bmh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Department::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Department.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BMH = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_bmh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Department.BMH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Department::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Department)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Department.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string BMH = 2;
  if (this->bmh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bmh().data(), static_cast<int>(this->_internal_bmh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Department.BMH");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bmh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Department)
  return target;
}

size_t Department::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Department)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string BMH = 2;
  if (this->bmh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bmh());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Department::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Department)
  GOOGLE_DCHECK_NE(&from, this);
  const Department* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Department>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Department)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Department)
    MergeFrom(*source);
  }
}

void Department::MergeFrom(const Department& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Department)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.bmh().size() > 0) {

    bmh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bmh_);
  }
}

void Department::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Department)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Department::CopyFrom(const Department& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Department)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Department::IsInitialized() const {
  return true;
}

void Department::InternalSwap(Department* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bmh_.Swap(&other->bmh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Department::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDepartment::InitAsDefaultInstance() {
}
class C2SDepartment::_Internal {
 public:
};

C2SDepartment::C2SDepartment()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDepartment)
}
C2SDepartment::C2SDepartment(const C2SDepartment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDepartment)
}

void C2SDepartment::SharedCtor() {
  request_ = 0;
}

C2SDepartment::~C2SDepartment() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDepartment)
  SharedDtor();
}

void C2SDepartment::SharedDtor() {
}

void C2SDepartment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDepartment& C2SDepartment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDepartment_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDepartment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SDepartment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDepartment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDepartment)
  return target;
}

size_t C2SDepartment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDepartment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDepartment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDepartment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDepartment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDepartment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDepartment)
    MergeFrom(*source);
  }
}

void C2SDepartment::MergeFrom(const C2SDepartment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SDepartment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDepartment::CopyFrom(const C2SDepartment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDepartment::IsInitialized() const {
  return true;
}

void C2SDepartment::InternalSwap(C2SDepartment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDepartment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CDepartment::InitAsDefaultInstance() {
}
class S2CDepartment::_Internal {
 public:
};

S2CDepartment::S2CDepartment()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CDepartment)
}
S2CDepartment::S2CDepartment(const S2CDepartment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      departmentlist_(from.departmentlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CDepartment)
}

void S2CDepartment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CDepartment_MsgData_2eproto.base);
}

S2CDepartment::~S2CDepartment() {
  // @@protoc_insertion_point(destructor:Protocol.S2CDepartment)
  SharedDtor();
}

void S2CDepartment::SharedDtor() {
}

void S2CDepartment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CDepartment& S2CDepartment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CDepartment_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CDepartment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  departmentlist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CDepartment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.Department departmentList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_departmentlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CDepartment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.Department departmentList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_departmentlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_departmentlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CDepartment)
  return target;
}

size_t S2CDepartment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CDepartment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.Department departmentList = 1;
  total_size += 1UL * this->_internal_departmentlist_size();
  for (const auto& msg : this->departmentlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CDepartment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CDepartment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CDepartment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CDepartment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CDepartment)
    MergeFrom(*source);
  }
}

void S2CDepartment::MergeFrom(const S2CDepartment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  departmentlist_.MergeFrom(from.departmentlist_);
}

void S2CDepartment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CDepartment::CopyFrom(const S2CDepartment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CDepartment::IsInitialized() const {
  return true;
}

void S2CDepartment::InternalSwap(S2CDepartment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  departmentlist_.InternalSwap(&other->departmentlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CDepartment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddDepartment::InitAsDefaultInstance() {
}
class C2SAddDepartment::_Internal {
 public:
};

C2SAddDepartment::C2SAddDepartment()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddDepartment)
}
C2SAddDepartment::C2SAddDepartment(const C2SAddDepartment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      departmentlist_(from.departmentlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddDepartment)
}

void C2SAddDepartment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddDepartment_MsgData_2eproto.base);
}

C2SAddDepartment::~C2SAddDepartment() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddDepartment)
  SharedDtor();
}

void C2SAddDepartment::SharedDtor() {
}

void C2SAddDepartment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddDepartment& C2SAddDepartment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddDepartment_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SAddDepartment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  departmentlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddDepartment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.Department departmentList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_departmentlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddDepartment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.Department departmentList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_departmentlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_departmentlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddDepartment)
  return target;
}

size_t C2SAddDepartment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddDepartment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.Department departmentList = 1;
  total_size += 1UL * this->_internal_departmentlist_size();
  for (const auto& msg : this->departmentlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddDepartment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddDepartment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddDepartment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddDepartment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddDepartment)
    MergeFrom(*source);
  }
}

void C2SAddDepartment::MergeFrom(const C2SAddDepartment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  departmentlist_.MergeFrom(from.departmentlist_);
}

void C2SAddDepartment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddDepartment::CopyFrom(const C2SAddDepartment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddDepartment::IsInitialized() const {
  return true;
}

void C2SAddDepartment::InternalSwap(C2SAddDepartment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  departmentlist_.InternalSwap(&other->departmentlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddDepartment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateDepartment::InitAsDefaultInstance() {
  ::Protocol::_UpdateDepartment_default_instance_._instance.get_mutable()->department_ = const_cast< ::Protocol::Department*>(
      ::Protocol::Department::internal_default_instance());
}
class UpdateDepartment::_Internal {
 public:
  static const ::Protocol::Department& department(const UpdateDepartment* msg);
};

const ::Protocol::Department&
UpdateDepartment::_Internal::department(const UpdateDepartment* msg) {
  return *msg->department_;
}
UpdateDepartment::UpdateDepartment()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.UpdateDepartment)
}
UpdateDepartment::UpdateDepartment(const UpdateDepartment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldbh().empty()) {
    oldbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldbh_);
  }
  if (from._internal_has_department()) {
    department_ = new ::Protocol::Department(*from.department_);
  } else {
    department_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UpdateDepartment)
}

void UpdateDepartment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateDepartment_MsgData_2eproto.base);
  oldbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  department_ = nullptr;
}

UpdateDepartment::~UpdateDepartment() {
  // @@protoc_insertion_point(destructor:Protocol.UpdateDepartment)
  SharedDtor();
}

void UpdateDepartment::SharedDtor() {
  oldbh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete department_;
}

void UpdateDepartment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateDepartment& UpdateDepartment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateDepartment_MsgData_2eproto.base);
  return *internal_default_instance();
}


void UpdateDepartment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UpdateDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldbh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && department_ != nullptr) {
    delete department_;
  }
  department_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateDepartment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Protocol.Department department = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_department(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string oldBH = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_oldbh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.UpdateDepartment.oldBH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateDepartment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UpdateDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.Department department = 1;
  if (this->has_department()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::department(this), target, stream);
  }

  // string oldBH = 2;
  if (this->oldbh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldbh().data(), static_cast<int>(this->_internal_oldbh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UpdateDepartment.oldBH");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldbh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UpdateDepartment)
  return target;
}

size_t UpdateDepartment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UpdateDepartment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oldBH = 2;
  if (this->oldbh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldbh());
  }

  // .Protocol.Department department = 1;
  if (this->has_department()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *department_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateDepartment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.UpdateDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDepartment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateDepartment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.UpdateDepartment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.UpdateDepartment)
    MergeFrom(*source);
  }
}

void UpdateDepartment::MergeFrom(const UpdateDepartment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UpdateDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldbh().size() > 0) {

    oldbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldbh_);
  }
  if (from.has_department()) {
    _internal_mutable_department()->::Protocol::Department::MergeFrom(from._internal_department());
  }
}

void UpdateDepartment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.UpdateDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDepartment::CopyFrom(const UpdateDepartment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UpdateDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDepartment::IsInitialized() const {
  return true;
}

void UpdateDepartment::InternalSwap(UpdateDepartment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oldbh_.Swap(&other->oldbh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(department_, other->department_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDepartment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SUpdateDepartment::InitAsDefaultInstance() {
}
class C2SUpdateDepartment::_Internal {
 public:
};

C2SUpdateDepartment::C2SUpdateDepartment()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SUpdateDepartment)
}
C2SUpdateDepartment::C2SUpdateDepartment(const C2SUpdateDepartment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      departmentlist_(from.departmentlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SUpdateDepartment)
}

void C2SUpdateDepartment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SUpdateDepartment_MsgData_2eproto.base);
}

C2SUpdateDepartment::~C2SUpdateDepartment() {
  // @@protoc_insertion_point(destructor:Protocol.C2SUpdateDepartment)
  SharedDtor();
}

void C2SUpdateDepartment::SharedDtor() {
}

void C2SUpdateDepartment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SUpdateDepartment& C2SUpdateDepartment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SUpdateDepartment_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SUpdateDepartment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SUpdateDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  departmentlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SUpdateDepartment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.UpdateDepartment departmentList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_departmentlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SUpdateDepartment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SUpdateDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.UpdateDepartment departmentList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_departmentlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_departmentlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SUpdateDepartment)
  return target;
}

size_t C2SUpdateDepartment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SUpdateDepartment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.UpdateDepartment departmentList = 1;
  total_size += 1UL * this->_internal_departmentlist_size();
  for (const auto& msg : this->departmentlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SUpdateDepartment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SUpdateDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SUpdateDepartment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SUpdateDepartment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SUpdateDepartment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SUpdateDepartment)
    MergeFrom(*source);
  }
}

void C2SUpdateDepartment::MergeFrom(const C2SUpdateDepartment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SUpdateDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  departmentlist_.MergeFrom(from.departmentlist_);
}

void C2SUpdateDepartment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SUpdateDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUpdateDepartment::CopyFrom(const C2SUpdateDepartment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SUpdateDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUpdateDepartment::IsInitialized() const {
  return true;
}

void C2SUpdateDepartment::InternalSwap(C2SUpdateDepartment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  departmentlist_.InternalSwap(&other->departmentlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SUpdateDepartment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDeleteDepartment::InitAsDefaultInstance() {
}
class C2SDeleteDepartment::_Internal {
 public:
};

C2SDeleteDepartment::C2SDeleteDepartment()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDeleteDepartment)
}
C2SDeleteDepartment::C2SDeleteDepartment(const C2SDeleteDepartment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      bhlist_(from.bhlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDeleteDepartment)
}

void C2SDeleteDepartment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SDeleteDepartment_MsgData_2eproto.base);
}

C2SDeleteDepartment::~C2SDeleteDepartment() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDeleteDepartment)
  SharedDtor();
}

void C2SDeleteDepartment::SharedDtor() {
}

void C2SDeleteDepartment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDeleteDepartment& C2SDeleteDepartment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDeleteDepartment_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDeleteDepartment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDeleteDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SDeleteDepartment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string bhList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bhlist();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SDeleteDepartment.bhList"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDeleteDepartment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDeleteDepartment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string bhList = 1;
  for (int i = 0, n = this->_internal_bhlist_size(); i < n; i++) {
    const auto& s = this->_internal_bhlist(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SDeleteDepartment.bhList");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDeleteDepartment)
  return target;
}

size_t C2SDeleteDepartment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDeleteDepartment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string bhList = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bhlist_.size());
  for (int i = 0, n = bhlist_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      bhlist_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDeleteDepartment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDeleteDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDeleteDepartment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDeleteDepartment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDeleteDepartment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDeleteDepartment)
    MergeFrom(*source);
  }
}

void C2SDeleteDepartment::MergeFrom(const C2SDeleteDepartment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDeleteDepartment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bhlist_.MergeFrom(from.bhlist_);
}

void C2SDeleteDepartment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDeleteDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteDepartment::CopyFrom(const C2SDeleteDepartment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDeleteDepartment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteDepartment::IsInitialized() const {
  return true;
}

void C2SDeleteDepartment::InternalSwap(C2SDeleteDepartment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bhlist_.InternalSwap(&other->bhlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDeleteDepartment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Book::InitAsDefaultInstance() {
}
class Book::_Internal {
 public:
};

Book::Book()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.Book)
}
Book::Book(const Book& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_time().empty()) {
    time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  bh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bh().empty()) {
    bh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bh_);
  }
  price_ = from.price_;
  // @@protoc_insertion_point(copy_constructor:Protocol.Book)
}

void Book::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Book_MsgData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
}

Book::~Book() {
  // @@protoc_insertion_point(destructor:Protocol.Book)
  SharedDtor();
}

void Book::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Book::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Book& Book::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Book_MsgData_2eproto.base);
  return *internal_default_instance();
}


void Book::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.Book)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
  _internal_metadata_.Clear();
}

const char* Book::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Book.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Book.time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BH = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_bh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.Book.BH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float price = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Book::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.Book)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Book.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string time = 2;
  if (this->time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_time().data(), static_cast<int>(this->_internal_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Book.time");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_time(), target);
  }

  // string BH = 3;
  if (this->bh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bh().data(), static_cast<int>(this->_internal_bh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.Book.BH");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bh(), target);
  }

  // float price = 4;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_price(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.Book)
  return target;
}

size_t Book::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.Book)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string time = 2;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_time());
  }

  // string BH = 3;
  if (this->bh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bh());
  }

  // float price = 4;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Book::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.Book)
  GOOGLE_DCHECK_NE(&from, this);
  const Book* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Book>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.Book)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.Book)
    MergeFrom(*source);
  }
}

void Book::MergeFrom(const Book& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.Book)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.bh().size() > 0) {

    bh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bh_);
  }
  if (!(from.price() <= 0 && from.price() >= 0)) {
    _internal_set_price(from._internal_price());
  }
}

void Book::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.Book)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Book::CopyFrom(const Book& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.Book)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Book::IsInitialized() const {
  return true;
}

void Book::InternalSwap(Book* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bh_.Swap(&other->bh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(price_, other->price_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Book::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SBook::InitAsDefaultInstance() {
}
class C2SBook::_Internal {
 public:
};

C2SBook::C2SBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SBook)
}
C2SBook::C2SBook(const C2SBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SBook)
}

void C2SBook::SharedCtor() {
  request_ = 0;
}

C2SBook::~C2SBook() {
  // @@protoc_insertion_point(destructor:Protocol.C2SBook)
  SharedDtor();
}

void C2SBook::SharedDtor() {
}

void C2SBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SBook& C2SBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SBook)
  return target;
}

size_t C2SBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SBook)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SBook)
    MergeFrom(*source);
  }
}

void C2SBook::MergeFrom(const C2SBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SBook::CopyFrom(const C2SBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SBook::IsInitialized() const {
  return true;
}

void C2SBook::InternalSwap(C2SBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CBook::InitAsDefaultInstance() {
}
class S2CBook::_Internal {
 public:
};

S2CBook::S2CBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CBook)
}
S2CBook::S2CBook(const S2CBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      booklist_(from.booklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CBook)
}

void S2CBook::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CBook_MsgData_2eproto.base);
}

S2CBook::~S2CBook() {
  // @@protoc_insertion_point(destructor:Protocol.S2CBook)
  SharedDtor();
}

void S2CBook::SharedDtor() {
}

void S2CBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CBook& S2CBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  booklist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.Book bookList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_booklist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.Book bookList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_booklist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_booklist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CBook)
  return target;
}

size_t S2CBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.Book bookList = 1;
  total_size += 1UL * this->_internal_booklist_size();
  for (const auto& msg : this->booklist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CBook)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CBook)
    MergeFrom(*source);
  }
}

void S2CBook::MergeFrom(const S2CBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  booklist_.MergeFrom(from.booklist_);
}

void S2CBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CBook::CopyFrom(const S2CBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CBook::IsInitialized() const {
  return true;
}

void S2CBook::InternalSwap(S2CBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  booklist_.InternalSwap(&other->booklist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddBooks::InitAsDefaultInstance() {
}
class C2SAddBooks::_Internal {
 public:
};

C2SAddBooks::C2SAddBooks()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddBooks)
}
C2SAddBooks::C2SAddBooks(const C2SAddBooks& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      booklist_(from.booklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddBooks)
}

void C2SAddBooks::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddBooks_MsgData_2eproto.base);
}

C2SAddBooks::~C2SAddBooks() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddBooks)
  SharedDtor();
}

void C2SAddBooks::SharedDtor() {
}

void C2SAddBooks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddBooks& C2SAddBooks::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddBooks_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SAddBooks::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddBooks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  booklist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddBooks::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.Book bookList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_booklist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddBooks::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddBooks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.Book bookList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_booklist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_booklist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddBooks)
  return target;
}

size_t C2SAddBooks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddBooks)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.Book bookList = 1;
  total_size += 1UL * this->_internal_booklist_size();
  for (const auto& msg : this->booklist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddBooks::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddBooks)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddBooks* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddBooks>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddBooks)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddBooks)
    MergeFrom(*source);
  }
}

void C2SAddBooks::MergeFrom(const C2SAddBooks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddBooks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  booklist_.MergeFrom(from.booklist_);
}

void C2SAddBooks::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddBooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddBooks::CopyFrom(const C2SAddBooks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddBooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddBooks::IsInitialized() const {
  return true;
}

void C2SAddBooks::InternalSwap(C2SAddBooks* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  booklist_.InternalSwap(&other->booklist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddBooks::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDeleteBooks::InitAsDefaultInstance() {
}
class C2SDeleteBooks::_Internal {
 public:
};

C2SDeleteBooks::C2SDeleteBooks()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDeleteBooks)
}
C2SDeleteBooks::C2SDeleteBooks(const C2SDeleteBooks& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      bhlist_(from.bhlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDeleteBooks)
}

void C2SDeleteBooks::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SDeleteBooks_MsgData_2eproto.base);
}

C2SDeleteBooks::~C2SDeleteBooks() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDeleteBooks)
  SharedDtor();
}

void C2SDeleteBooks::SharedDtor() {
}

void C2SDeleteBooks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDeleteBooks& C2SDeleteBooks::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDeleteBooks_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDeleteBooks::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDeleteBooks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bhlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SDeleteBooks::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string bhList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bhlist();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SDeleteBooks.bhList"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDeleteBooks::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDeleteBooks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string bhList = 1;
  for (int i = 0, n = this->_internal_bhlist_size(); i < n; i++) {
    const auto& s = this->_internal_bhlist(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SDeleteBooks.bhList");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDeleteBooks)
  return target;
}

size_t C2SDeleteBooks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDeleteBooks)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string bhList = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bhlist_.size());
  for (int i = 0, n = bhlist_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      bhlist_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDeleteBooks::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDeleteBooks)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDeleteBooks* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDeleteBooks>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDeleteBooks)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDeleteBooks)
    MergeFrom(*source);
  }
}

void C2SDeleteBooks::MergeFrom(const C2SDeleteBooks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDeleteBooks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bhlist_.MergeFrom(from.bhlist_);
}

void C2SDeleteBooks::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDeleteBooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteBooks::CopyFrom(const C2SDeleteBooks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDeleteBooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteBooks::IsInitialized() const {
  return true;
}

void C2SDeleteBooks::InternalSwap(C2SDeleteBooks* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bhlist_.InternalSwap(&other->bhlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDeleteBooks::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateBook::InitAsDefaultInstance() {
  ::Protocol::_UpdateBook_default_instance_._instance.get_mutable()->book_ = const_cast< ::Protocol::Book*>(
      ::Protocol::Book::internal_default_instance());
}
class UpdateBook::_Internal {
 public:
  static const ::Protocol::Book& book(const UpdateBook* msg);
};

const ::Protocol::Book&
UpdateBook::_Internal::book(const UpdateBook* msg) {
  return *msg->book_;
}
UpdateBook::UpdateBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.UpdateBook)
}
UpdateBook::UpdateBook(const UpdateBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldbh().empty()) {
    oldbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldbh_);
  }
  if (from._internal_has_book()) {
    book_ = new ::Protocol::Book(*from.book_);
  } else {
    book_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UpdateBook)
}

void UpdateBook::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateBook_MsgData_2eproto.base);
  oldbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  book_ = nullptr;
}

UpdateBook::~UpdateBook() {
  // @@protoc_insertion_point(destructor:Protocol.UpdateBook)
  SharedDtor();
}

void UpdateBook::SharedDtor() {
  oldbh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete book_;
}

void UpdateBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateBook& UpdateBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void UpdateBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UpdateBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldbh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && book_ != nullptr) {
    delete book_;
  }
  book_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string oldBH = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_oldbh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.UpdateBook.oldBH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Protocol.Book book = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_book(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UpdateBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oldBH = 1;
  if (this->oldbh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldbh().data(), static_cast<int>(this->_internal_oldbh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UpdateBook.oldBH");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_oldbh(), target);
  }

  // .Protocol.Book book = 2;
  if (this->has_book()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::book(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UpdateBook)
  return target;
}

size_t UpdateBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UpdateBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oldBH = 1;
  if (this->oldbh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldbh());
  }

  // .Protocol.Book book = 2;
  if (this->has_book()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *book_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.UpdateBook)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.UpdateBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.UpdateBook)
    MergeFrom(*source);
  }
}

void UpdateBook::MergeFrom(const UpdateBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UpdateBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldbh().size() > 0) {

    oldbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldbh_);
  }
  if (from.has_book()) {
    _internal_mutable_book()->::Protocol::Book::MergeFrom(from._internal_book());
  }
}

void UpdateBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.UpdateBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateBook::CopyFrom(const UpdateBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UpdateBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBook::IsInitialized() const {
  return true;
}

void UpdateBook::InternalSwap(UpdateBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oldbh_.Swap(&other->oldbh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(book_, other->book_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SUpdateBooks::InitAsDefaultInstance() {
}
class C2SUpdateBooks::_Internal {
 public:
};

C2SUpdateBooks::C2SUpdateBooks()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SUpdateBooks)
}
C2SUpdateBooks::C2SUpdateBooks(const C2SUpdateBooks& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      booklist_(from.booklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SUpdateBooks)
}

void C2SUpdateBooks::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SUpdateBooks_MsgData_2eproto.base);
}

C2SUpdateBooks::~C2SUpdateBooks() {
  // @@protoc_insertion_point(destructor:Protocol.C2SUpdateBooks)
  SharedDtor();
}

void C2SUpdateBooks::SharedDtor() {
}

void C2SUpdateBooks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SUpdateBooks& C2SUpdateBooks::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SUpdateBooks_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SUpdateBooks::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SUpdateBooks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  booklist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SUpdateBooks::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.UpdateBook bookList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_booklist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SUpdateBooks::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SUpdateBooks)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.UpdateBook bookList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_booklist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_booklist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SUpdateBooks)
  return target;
}

size_t C2SUpdateBooks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SUpdateBooks)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.UpdateBook bookList = 1;
  total_size += 1UL * this->_internal_booklist_size();
  for (const auto& msg : this->booklist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SUpdateBooks::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SUpdateBooks)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SUpdateBooks* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SUpdateBooks>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SUpdateBooks)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SUpdateBooks)
    MergeFrom(*source);
  }
}

void C2SUpdateBooks::MergeFrom(const C2SUpdateBooks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SUpdateBooks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  booklist_.MergeFrom(from.booklist_);
}

void C2SUpdateBooks::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SUpdateBooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUpdateBooks::CopyFrom(const C2SUpdateBooks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SUpdateBooks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUpdateBooks::IsInitialized() const {
  return true;
}

void C2SUpdateBooks::InternalSwap(C2SUpdateBooks* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  booklist_.InternalSwap(&other->booklist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SUpdateBooks::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void YanTao::InitAsDefaultInstance() {
}
class YanTao::_Internal {
 public:
};

YanTao::YanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.YanTao)
}
YanTao::YanTao(const YanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_time().empty()) {
    time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.YanTao)
}

void YanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_YanTao_MsgData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

YanTao::~YanTao() {
  // @@protoc_insertion_point(destructor:Protocol.YanTao)
  SharedDtor();
}

void YanTao::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void YanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const YanTao& YanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_YanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void YanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.YanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* YanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.YanTao.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.YanTao.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.YanTao.time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.YanTao.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* YanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.YanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.YanTao.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.YanTao.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  // string time = 3;
  if (this->time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_time().data(), static_cast<int>(this->_internal_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.YanTao.time");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_time(), target);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.YanTao.address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.YanTao)
  return target;
}

size_t YanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.YanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string time = 3;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_time());
  }

  // string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void YanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.YanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const YanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<YanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.YanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.YanTao)
    MergeFrom(*source);
  }
}

void YanTao::MergeFrom(const YanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.YanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void YanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.YanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YanTao::CopyFrom(const YanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.YanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YanTao::IsInitialized() const {
  return true;
}

void YanTao::InternalSwap(YanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata YanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SYanTao::InitAsDefaultInstance() {
}
class C2SYanTao::_Internal {
 public:
};

C2SYanTao::C2SYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SYanTao)
}
C2SYanTao::C2SYanTao(const C2SYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SYanTao)
}

void C2SYanTao::SharedCtor() {
  request_ = 0;
}

C2SYanTao::~C2SYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SYanTao)
  SharedDtor();
}

void C2SYanTao::SharedDtor() {
}

void C2SYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SYanTao& C2SYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SYanTao)
  return target;
}

size_t C2SYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SYanTao)
    MergeFrom(*source);
  }
}

void C2SYanTao::MergeFrom(const C2SYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SYanTao::CopyFrom(const C2SYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SYanTao::IsInitialized() const {
  return true;
}

void C2SYanTao::InternalSwap(C2SYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CYanTao::InitAsDefaultInstance() {
}
class S2CYanTao::_Internal {
 public:
};

S2CYanTao::S2CYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CYanTao)
}
S2CYanTao::S2CYanTao(const S2CYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      yantaolist_(from.yantaolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CYanTao)
}

void S2CYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CYanTao_MsgData_2eproto.base);
}

S2CYanTao::~S2CYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.S2CYanTao)
  SharedDtor();
}

void S2CYanTao::SharedDtor() {
}

void S2CYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CYanTao& S2CYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  yantaolist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.YanTao yanTaoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_yantaolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.YanTao yanTaoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_yantaolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_yantaolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CYanTao)
  return target;
}

size_t S2CYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.YanTao yanTaoList = 1;
  total_size += 1UL * this->_internal_yantaolist_size();
  for (const auto& msg : this->yantaolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CYanTao)
    MergeFrom(*source);
  }
}

void S2CYanTao::MergeFrom(const S2CYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  yantaolist_.MergeFrom(from.yantaolist_);
}

void S2CYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CYanTao::CopyFrom(const S2CYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CYanTao::IsInitialized() const {
  return true;
}

void S2CYanTao::InternalSwap(S2CYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  yantaolist_.InternalSwap(&other->yantaolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddYanTao::InitAsDefaultInstance() {
}
class C2SAddYanTao::_Internal {
 public:
};

C2SAddYanTao::C2SAddYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddYanTao)
}
C2SAddYanTao::C2SAddYanTao(const C2SAddYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      yantaolist_(from.yantaolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddYanTao)
}

void C2SAddYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddYanTao_MsgData_2eproto.base);
}

C2SAddYanTao::~C2SAddYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddYanTao)
  SharedDtor();
}

void C2SAddYanTao::SharedDtor() {
}

void C2SAddYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddYanTao& C2SAddYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SAddYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  yantaolist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.YanTao yanTaoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_yantaolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.YanTao yanTaoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_yantaolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_yantaolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddYanTao)
  return target;
}

size_t C2SAddYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.YanTao yanTaoList = 1;
  total_size += 1UL * this->_internal_yantaolist_size();
  for (const auto& msg : this->yantaolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddYanTao)
    MergeFrom(*source);
  }
}

void C2SAddYanTao::MergeFrom(const C2SAddYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  yantaolist_.MergeFrom(from.yantaolist_);
}

void C2SAddYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddYanTao::CopyFrom(const C2SAddYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddYanTao::IsInitialized() const {
  return true;
}

void C2SAddYanTao::InternalSwap(C2SAddYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  yantaolist_.InternalSwap(&other->yantaolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateYanTao::InitAsDefaultInstance() {
  ::Protocol::_UpdateYanTao_default_instance_._instance.get_mutable()->yantao_ = const_cast< ::Protocol::YanTao*>(
      ::Protocol::YanTao::internal_default_instance());
}
class UpdateYanTao::_Internal {
 public:
  static const ::Protocol::YanTao& yantao(const UpdateYanTao* msg);
};

const ::Protocol::YanTao&
UpdateYanTao::_Internal::yantao(const UpdateYanTao* msg) {
  return *msg->yantao_;
}
UpdateYanTao::UpdateYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.UpdateYanTao)
}
UpdateYanTao::UpdateYanTao(const UpdateYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldname().empty()) {
    oldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from._internal_has_yantao()) {
    yantao_ = new ::Protocol::YanTao(*from.yantao_);
  } else {
    yantao_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UpdateYanTao)
}

void UpdateYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateYanTao_MsgData_2eproto.base);
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  yantao_ = nullptr;
}

UpdateYanTao::~UpdateYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.UpdateYanTao)
  SharedDtor();
}

void UpdateYanTao::SharedDtor() {
  oldname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete yantao_;
}

void UpdateYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateYanTao& UpdateYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void UpdateYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UpdateYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && yantao_ != nullptr) {
    delete yantao_;
  }
  yantao_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Protocol.YanTao yantao = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_yantao(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string oldName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_oldname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.UpdateYanTao.oldName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UpdateYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.YanTao yantao = 1;
  if (this->has_yantao()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::yantao(this), target, stream);
  }

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldname().data(), static_cast<int>(this->_internal_oldname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UpdateYanTao.oldName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UpdateYanTao)
  return target;
}

size_t UpdateYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UpdateYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldname());
  }

  // .Protocol.YanTao yantao = 1;
  if (this->has_yantao()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *yantao_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.UpdateYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.UpdateYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.UpdateYanTao)
    MergeFrom(*source);
  }
}

void UpdateYanTao::MergeFrom(const UpdateYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UpdateYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.has_yantao()) {
    _internal_mutable_yantao()->::Protocol::YanTao::MergeFrom(from._internal_yantao());
  }
}

void UpdateYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.UpdateYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateYanTao::CopyFrom(const UpdateYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UpdateYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateYanTao::IsInitialized() const {
  return true;
}

void UpdateYanTao::InternalSwap(UpdateYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oldname_.Swap(&other->oldname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(yantao_, other->yantao_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SUpdateYanTao::InitAsDefaultInstance() {
}
class C2SUpdateYanTao::_Internal {
 public:
};

C2SUpdateYanTao::C2SUpdateYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SUpdateYanTao)
}
C2SUpdateYanTao::C2SUpdateYanTao(const C2SUpdateYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      yantaolist_(from.yantaolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SUpdateYanTao)
}

void C2SUpdateYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SUpdateYanTao_MsgData_2eproto.base);
}

C2SUpdateYanTao::~C2SUpdateYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SUpdateYanTao)
  SharedDtor();
}

void C2SUpdateYanTao::SharedDtor() {
}

void C2SUpdateYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SUpdateYanTao& C2SUpdateYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SUpdateYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SUpdateYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SUpdateYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  yantaolist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SUpdateYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.UpdateYanTao yanTaoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_yantaolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SUpdateYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SUpdateYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.UpdateYanTao yanTaoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_yantaolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_yantaolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SUpdateYanTao)
  return target;
}

size_t C2SUpdateYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SUpdateYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.UpdateYanTao yanTaoList = 1;
  total_size += 1UL * this->_internal_yantaolist_size();
  for (const auto& msg : this->yantaolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SUpdateYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SUpdateYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SUpdateYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SUpdateYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SUpdateYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SUpdateYanTao)
    MergeFrom(*source);
  }
}

void C2SUpdateYanTao::MergeFrom(const C2SUpdateYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SUpdateYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  yantaolist_.MergeFrom(from.yantaolist_);
}

void C2SUpdateYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SUpdateYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUpdateYanTao::CopyFrom(const C2SUpdateYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SUpdateYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUpdateYanTao::IsInitialized() const {
  return true;
}

void C2SUpdateYanTao::InternalSwap(C2SUpdateYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  yantaolist_.InternalSwap(&other->yantaolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SUpdateYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDeleteYanTao::InitAsDefaultInstance() {
}
class C2SDeleteYanTao::_Internal {
 public:
};

C2SDeleteYanTao::C2SDeleteYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDeleteYanTao)
}
C2SDeleteYanTao::C2SDeleteYanTao(const C2SDeleteYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      name_(from.name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDeleteYanTao)
}

void C2SDeleteYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SDeleteYanTao_MsgData_2eproto.base);
}

C2SDeleteYanTao::~C2SDeleteYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDeleteYanTao)
  SharedDtor();
}

void C2SDeleteYanTao::SharedDtor() {
}

void C2SDeleteYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDeleteYanTao& C2SDeleteYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDeleteYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDeleteYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDeleteYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SDeleteYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SDeleteYanTao.name"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDeleteYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDeleteYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->_internal_name_size(); i < n; i++) {
    const auto& s = this->_internal_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SDeleteYanTao.name");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDeleteYanTao)
  return target;
}

size_t C2SDeleteYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDeleteYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(name_.size());
  for (int i = 0, n = name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      name_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDeleteYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDeleteYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDeleteYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDeleteYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDeleteYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDeleteYanTao)
    MergeFrom(*source);
  }
}

void C2SDeleteYanTao::MergeFrom(const C2SDeleteYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDeleteYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_.MergeFrom(from.name_);
}

void C2SDeleteYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDeleteYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteYanTao::CopyFrom(const C2SDeleteYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDeleteYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteYanTao::IsInitialized() const {
  return true;
}

void C2SDeleteYanTao::InternalSwap(C2SDeleteYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.InternalSwap(&other->name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDeleteYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WeiWen::InitAsDefaultInstance() {
}
class WeiWen::_Internal {
 public:
};

WeiWen::WeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.WeiWen)
}
WeiWen::WeiWen(const WeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_time().empty()) {
    time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.WeiWen)
}

void WeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WeiWen_MsgData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WeiWen::~WeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.WeiWen)
  SharedDtor();
}

void WeiWen::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WeiWen& WeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void WeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.WeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* WeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.WeiWen.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.WeiWen.time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.WeiWen.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.WeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.WeiWen.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string time = 2;
  if (this->time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_time().data(), static_cast<int>(this->_internal_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.WeiWen.time");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_time(), target);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.WeiWen.address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.WeiWen)
  return target;
}

size_t WeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.WeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string time = 2;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_time());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.WeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const WeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.WeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.WeiWen)
    MergeFrom(*source);
  }
}

void WeiWen::MergeFrom(const WeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.WeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void WeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.WeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeiWen::CopyFrom(const WeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.WeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeiWen::IsInitialized() const {
  return true;
}

void WeiWen::InternalSwap(WeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata WeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SWeiWen::InitAsDefaultInstance() {
}
class C2SWeiWen::_Internal {
 public:
};

C2SWeiWen::C2SWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SWeiWen)
}
C2SWeiWen::C2SWeiWen(const C2SWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SWeiWen)
}

void C2SWeiWen::SharedCtor() {
  request_ = 0;
}

C2SWeiWen::~C2SWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.C2SWeiWen)
  SharedDtor();
}

void C2SWeiWen::SharedDtor() {
}

void C2SWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SWeiWen& C2SWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SWeiWen)
  return target;
}

size_t C2SWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SWeiWen)
    MergeFrom(*source);
  }
}

void C2SWeiWen::MergeFrom(const C2SWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SWeiWen::CopyFrom(const C2SWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SWeiWen::IsInitialized() const {
  return true;
}

void C2SWeiWen::InternalSwap(C2SWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CWeiWen::InitAsDefaultInstance() {
}
class S2CWeiWen::_Internal {
 public:
};

S2CWeiWen::S2CWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CWeiWen)
}
S2CWeiWen::S2CWeiWen(const S2CWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      weiwenlist_(from.weiwenlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CWeiWen)
}

void S2CWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CWeiWen_MsgData_2eproto.base);
}

S2CWeiWen::~S2CWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.S2CWeiWen)
  SharedDtor();
}

void S2CWeiWen::SharedDtor() {
}

void S2CWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CWeiWen& S2CWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weiwenlist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.WeiWen weiWenList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_weiwenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.WeiWen weiWenList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_weiwenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_weiwenlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CWeiWen)
  return target;
}

size_t S2CWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.WeiWen weiWenList = 1;
  total_size += 1UL * this->_internal_weiwenlist_size();
  for (const auto& msg : this->weiwenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CWeiWen)
    MergeFrom(*source);
  }
}

void S2CWeiWen::MergeFrom(const S2CWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weiwenlist_.MergeFrom(from.weiwenlist_);
}

void S2CWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CWeiWen::CopyFrom(const S2CWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CWeiWen::IsInitialized() const {
  return true;
}

void S2CWeiWen::InternalSwap(S2CWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  weiwenlist_.InternalSwap(&other->weiwenlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddWeiWen::InitAsDefaultInstance() {
}
class C2SAddWeiWen::_Internal {
 public:
};

C2SAddWeiWen::C2SAddWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddWeiWen)
}
C2SAddWeiWen::C2SAddWeiWen(const C2SAddWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      weiwenlist_(from.weiwenlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddWeiWen)
}

void C2SAddWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddWeiWen_MsgData_2eproto.base);
}

C2SAddWeiWen::~C2SAddWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddWeiWen)
  SharedDtor();
}

void C2SAddWeiWen::SharedDtor() {
}

void C2SAddWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddWeiWen& C2SAddWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SAddWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weiwenlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.WeiWen weiWenList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_weiwenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.WeiWen weiWenList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_weiwenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_weiwenlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddWeiWen)
  return target;
}

size_t C2SAddWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.WeiWen weiWenList = 1;
  total_size += 1UL * this->_internal_weiwenlist_size();
  for (const auto& msg : this->weiwenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddWeiWen)
    MergeFrom(*source);
  }
}

void C2SAddWeiWen::MergeFrom(const C2SAddWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weiwenlist_.MergeFrom(from.weiwenlist_);
}

void C2SAddWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddWeiWen::CopyFrom(const C2SAddWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddWeiWen::IsInitialized() const {
  return true;
}

void C2SAddWeiWen::InternalSwap(C2SAddWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  weiwenlist_.InternalSwap(&other->weiwenlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateWeiWen::InitAsDefaultInstance() {
  ::Protocol::_UpdateWeiWen_default_instance_._instance.get_mutable()->weiwen_ = const_cast< ::Protocol::WeiWen*>(
      ::Protocol::WeiWen::internal_default_instance());
}
class UpdateWeiWen::_Internal {
 public:
  static const ::Protocol::WeiWen& weiwen(const UpdateWeiWen* msg);
};

const ::Protocol::WeiWen&
UpdateWeiWen::_Internal::weiwen(const UpdateWeiWen* msg) {
  return *msg->weiwen_;
}
UpdateWeiWen::UpdateWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.UpdateWeiWen)
}
UpdateWeiWen::UpdateWeiWen(const UpdateWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldname().empty()) {
    oldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from._internal_has_weiwen()) {
    weiwen_ = new ::Protocol::WeiWen(*from.weiwen_);
  } else {
    weiwen_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UpdateWeiWen)
}

void UpdateWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateWeiWen_MsgData_2eproto.base);
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  weiwen_ = nullptr;
}

UpdateWeiWen::~UpdateWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.UpdateWeiWen)
  SharedDtor();
}

void UpdateWeiWen::SharedDtor() {
  oldname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete weiwen_;
}

void UpdateWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateWeiWen& UpdateWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void UpdateWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UpdateWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && weiwen_ != nullptr) {
    delete weiwen_;
  }
  weiwen_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Protocol.WeiWen weiwen = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_weiwen(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string oldName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_oldname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.UpdateWeiWen.oldName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UpdateWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.WeiWen weiwen = 1;
  if (this->has_weiwen()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::weiwen(this), target, stream);
  }

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldname().data(), static_cast<int>(this->_internal_oldname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UpdateWeiWen.oldName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UpdateWeiWen)
  return target;
}

size_t UpdateWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UpdateWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldname());
  }

  // .Protocol.WeiWen weiwen = 1;
  if (this->has_weiwen()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *weiwen_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.UpdateWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.UpdateWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.UpdateWeiWen)
    MergeFrom(*source);
  }
}

void UpdateWeiWen::MergeFrom(const UpdateWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UpdateWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.has_weiwen()) {
    _internal_mutable_weiwen()->::Protocol::WeiWen::MergeFrom(from._internal_weiwen());
  }
}

void UpdateWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.UpdateWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateWeiWen::CopyFrom(const UpdateWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UpdateWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateWeiWen::IsInitialized() const {
  return true;
}

void UpdateWeiWen::InternalSwap(UpdateWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oldname_.Swap(&other->oldname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(weiwen_, other->weiwen_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SUpdateWeiWen::InitAsDefaultInstance() {
}
class C2SUpdateWeiWen::_Internal {
 public:
};

C2SUpdateWeiWen::C2SUpdateWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SUpdateWeiWen)
}
C2SUpdateWeiWen::C2SUpdateWeiWen(const C2SUpdateWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      weiwenlist_(from.weiwenlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SUpdateWeiWen)
}

void C2SUpdateWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SUpdateWeiWen_MsgData_2eproto.base);
}

C2SUpdateWeiWen::~C2SUpdateWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.C2SUpdateWeiWen)
  SharedDtor();
}

void C2SUpdateWeiWen::SharedDtor() {
}

void C2SUpdateWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SUpdateWeiWen& C2SUpdateWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SUpdateWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SUpdateWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SUpdateWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weiwenlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SUpdateWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.UpdateWeiWen weiWenList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_weiwenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SUpdateWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SUpdateWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.UpdateWeiWen weiWenList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_weiwenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_weiwenlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SUpdateWeiWen)
  return target;
}

size_t C2SUpdateWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SUpdateWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.UpdateWeiWen weiWenList = 1;
  total_size += 1UL * this->_internal_weiwenlist_size();
  for (const auto& msg : this->weiwenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SUpdateWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SUpdateWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SUpdateWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SUpdateWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SUpdateWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SUpdateWeiWen)
    MergeFrom(*source);
  }
}

void C2SUpdateWeiWen::MergeFrom(const C2SUpdateWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SUpdateWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weiwenlist_.MergeFrom(from.weiwenlist_);
}

void C2SUpdateWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SUpdateWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUpdateWeiWen::CopyFrom(const C2SUpdateWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SUpdateWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUpdateWeiWen::IsInitialized() const {
  return true;
}

void C2SUpdateWeiWen::InternalSwap(C2SUpdateWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  weiwenlist_.InternalSwap(&other->weiwenlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SUpdateWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDeleteWeiWen::InitAsDefaultInstance() {
}
class C2SDeleteWeiWen::_Internal {
 public:
};

C2SDeleteWeiWen::C2SDeleteWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDeleteWeiWen)
}
C2SDeleteWeiWen::C2SDeleteWeiWen(const C2SDeleteWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      name_(from.name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDeleteWeiWen)
}

void C2SDeleteWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SDeleteWeiWen_MsgData_2eproto.base);
}

C2SDeleteWeiWen::~C2SDeleteWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDeleteWeiWen)
  SharedDtor();
}

void C2SDeleteWeiWen::SharedDtor() {
}

void C2SDeleteWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDeleteWeiWen& C2SDeleteWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDeleteWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDeleteWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDeleteWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SDeleteWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SDeleteWeiWen.name"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDeleteWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDeleteWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->_internal_name_size(); i < n; i++) {
    const auto& s = this->_internal_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SDeleteWeiWen.name");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDeleteWeiWen)
  return target;
}

size_t C2SDeleteWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDeleteWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(name_.size());
  for (int i = 0, n = name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      name_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDeleteWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDeleteWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDeleteWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDeleteWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDeleteWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDeleteWeiWen)
    MergeFrom(*source);
  }
}

void C2SDeleteWeiWen::MergeFrom(const C2SDeleteWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDeleteWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_.MergeFrom(from.name_);
}

void C2SDeleteWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDeleteWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteWeiWen::CopyFrom(const C2SDeleteWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDeleteWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteWeiWen::IsInitialized() const {
  return true;
}

void C2SDeleteWeiWen::InternalSwap(C2SDeleteWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.InternalSwap(&other->name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDeleteWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WriteBook::InitAsDefaultInstance() {
}
class WriteBook::_Internal {
 public:
};

WriteBook::WriteBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.WriteBook)
}
WriteBook::WriteBook(const WriteBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bbh().empty()) {
    bbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bbh_);
  }
  sbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sbh().empty()) {
    sbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sbh_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.WriteBook)
}

void WriteBook::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WriteBook_MsgData_2eproto.base);
  bbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WriteBook::~WriteBook() {
  // @@protoc_insertion_point(destructor:Protocol.WriteBook)
  SharedDtor();
}

void WriteBook::SharedDtor() {
  bbh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WriteBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteBook& WriteBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WriteBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void WriteBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.WriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bbh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* WriteBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string BBH = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bbh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.WriteBook.BBH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SBH = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sbh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.WriteBook.SBH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WriteBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.WriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string BBH = 1;
  if (this->bbh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bbh().data(), static_cast<int>(this->_internal_bbh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.WriteBook.BBH");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bbh(), target);
  }

  // string SBH = 2;
  if (this->sbh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sbh().data(), static_cast<int>(this->_internal_sbh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.WriteBook.SBH");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sbh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.WriteBook)
  return target;
}

size_t WriteBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.WriteBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string BBH = 1;
  if (this->bbh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bbh());
  }

  // string SBH = 2;
  if (this->sbh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sbh());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.WriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WriteBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.WriteBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.WriteBook)
    MergeFrom(*source);
  }
}

void WriteBook::MergeFrom(const WriteBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.WriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bbh().size() > 0) {

    bbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bbh_);
  }
  if (from.sbh().size() > 0) {

    sbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sbh_);
  }
}

void WriteBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.WriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteBook::CopyFrom(const WriteBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.WriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteBook::IsInitialized() const {
  return true;
}

void WriteBook::InternalSwap(WriteBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bbh_.Swap(&other->bbh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sbh_.Swap(&other->sbh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SWriteBook::InitAsDefaultInstance() {
}
class C2SWriteBook::_Internal {
 public:
};

C2SWriteBook::C2SWriteBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SWriteBook)
}
C2SWriteBook::C2SWriteBook(const C2SWriteBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SWriteBook)
}

void C2SWriteBook::SharedCtor() {
  request_ = 0;
}

C2SWriteBook::~C2SWriteBook() {
  // @@protoc_insertion_point(destructor:Protocol.C2SWriteBook)
  SharedDtor();
}

void C2SWriteBook::SharedDtor() {
}

void C2SWriteBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SWriteBook& C2SWriteBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SWriteBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SWriteBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SWriteBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SWriteBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SWriteBook)
  return target;
}

size_t C2SWriteBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SWriteBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SWriteBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SWriteBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SWriteBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SWriteBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SWriteBook)
    MergeFrom(*source);
  }
}

void C2SWriteBook::MergeFrom(const C2SWriteBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SWriteBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SWriteBook::CopyFrom(const C2SWriteBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SWriteBook::IsInitialized() const {
  return true;
}

void C2SWriteBook::InternalSwap(C2SWriteBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SWriteBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CWriteBook::InitAsDefaultInstance() {
}
class S2CWriteBook::_Internal {
 public:
};

S2CWriteBook::S2CWriteBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CWriteBook)
}
S2CWriteBook::S2CWriteBook(const S2CWriteBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      writebooklist_(from.writebooklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CWriteBook)
}

void S2CWriteBook::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CWriteBook_MsgData_2eproto.base);
}

S2CWriteBook::~S2CWriteBook() {
  // @@protoc_insertion_point(destructor:Protocol.S2CWriteBook)
  SharedDtor();
}

void S2CWriteBook::SharedDtor() {
}

void S2CWriteBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CWriteBook& S2CWriteBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CWriteBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CWriteBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writebooklist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CWriteBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.Book writeBookList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_writebooklist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CWriteBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.Book writeBookList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_writebooklist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_writebooklist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CWriteBook)
  return target;
}

size_t S2CWriteBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CWriteBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.Book writeBookList = 1;
  total_size += 1UL * this->_internal_writebooklist_size();
  for (const auto& msg : this->writebooklist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CWriteBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CWriteBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CWriteBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CWriteBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CWriteBook)
    MergeFrom(*source);
  }
}

void S2CWriteBook::MergeFrom(const S2CWriteBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writebooklist_.MergeFrom(from.writebooklist_);
}

void S2CWriteBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CWriteBook::CopyFrom(const S2CWriteBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CWriteBook::IsInitialized() const {
  return true;
}

void S2CWriteBook::InternalSwap(S2CWriteBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  writebooklist_.InternalSwap(&other->writebooklist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CWriteBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SSearchWriteBook::InitAsDefaultInstance() {
}
class C2SSearchWriteBook::_Internal {
 public:
};

C2SSearchWriteBook::C2SSearchWriteBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SSearchWriteBook)
}
C2SSearchWriteBook::C2SSearchWriteBook(const C2SSearchWriteBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SSearchWriteBook)
}

void C2SSearchWriteBook::SharedCtor() {
  request_ = 0;
}

C2SSearchWriteBook::~C2SSearchWriteBook() {
  // @@protoc_insertion_point(destructor:Protocol.C2SSearchWriteBook)
  SharedDtor();
}

void C2SSearchWriteBook::SharedDtor() {
}

void C2SSearchWriteBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SSearchWriteBook& C2SSearchWriteBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SSearchWriteBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SSearchWriteBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SSearchWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SSearchWriteBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SSearchWriteBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SSearchWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SSearchWriteBook)
  return target;
}

size_t C2SSearchWriteBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SSearchWriteBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SSearchWriteBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SSearchWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SSearchWriteBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SSearchWriteBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SSearchWriteBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SSearchWriteBook)
    MergeFrom(*source);
  }
}

void C2SSearchWriteBook::MergeFrom(const C2SSearchWriteBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SSearchWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SSearchWriteBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SSearchWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSearchWriteBook::CopyFrom(const C2SSearchWriteBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SSearchWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSearchWriteBook::IsInitialized() const {
  return true;
}

void C2SSearchWriteBook::InternalSwap(C2SSearchWriteBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SSearchWriteBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CSearchWriteBook::InitAsDefaultInstance() {
}
class S2CSearchWriteBook::_Internal {
 public:
};

S2CSearchWriteBook::S2CSearchWriteBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CSearchWriteBook)
}
S2CSearchWriteBook::S2CSearchWriteBook(const S2CSearchWriteBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      writebooklist_(from.writebooklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CSearchWriteBook)
}

void S2CSearchWriteBook::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CSearchWriteBook_MsgData_2eproto.base);
}

S2CSearchWriteBook::~S2CSearchWriteBook() {
  // @@protoc_insertion_point(destructor:Protocol.S2CSearchWriteBook)
  SharedDtor();
}

void S2CSearchWriteBook::SharedDtor() {
}

void S2CSearchWriteBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CSearchWriteBook& S2CSearchWriteBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CSearchWriteBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CSearchWriteBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CSearchWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writebooklist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CSearchWriteBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.WriteBook writeBookList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_writebooklist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CSearchWriteBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CSearchWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.WriteBook writeBookList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_writebooklist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_writebooklist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CSearchWriteBook)
  return target;
}

size_t S2CSearchWriteBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CSearchWriteBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.WriteBook writeBookList = 1;
  total_size += 1UL * this->_internal_writebooklist_size();
  for (const auto& msg : this->writebooklist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CSearchWriteBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CSearchWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CSearchWriteBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CSearchWriteBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CSearchWriteBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CSearchWriteBook)
    MergeFrom(*source);
  }
}

void S2CSearchWriteBook::MergeFrom(const S2CSearchWriteBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CSearchWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writebooklist_.MergeFrom(from.writebooklist_);
}

void S2CSearchWriteBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CSearchWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSearchWriteBook::CopyFrom(const S2CSearchWriteBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CSearchWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSearchWriteBook::IsInitialized() const {
  return true;
}

void S2CSearchWriteBook::InternalSwap(S2CSearchWriteBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  writebooklist_.InternalSwap(&other->writebooklist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CSearchWriteBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddWriteBook::InitAsDefaultInstance() {
}
class C2SAddWriteBook::_Internal {
 public:
};

C2SAddWriteBook::C2SAddWriteBook()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddWriteBook)
}
C2SAddWriteBook::C2SAddWriteBook(const C2SAddWriteBook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      writebooklist_(from.writebooklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddWriteBook)
}

void C2SAddWriteBook::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddWriteBook_MsgData_2eproto.base);
}

C2SAddWriteBook::~C2SAddWriteBook() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddWriteBook)
  SharedDtor();
}

void C2SAddWriteBook::SharedDtor() {
}

void C2SAddWriteBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddWriteBook& C2SAddWriteBook::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddWriteBook_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SAddWriteBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writebooklist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddWriteBook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.WriteBook writeBookList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_writebooklist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddWriteBook::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddWriteBook)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.WriteBook writeBookList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_writebooklist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_writebooklist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddWriteBook)
  return target;
}

size_t C2SAddWriteBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddWriteBook)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.WriteBook writeBookList = 1;
  total_size += 1UL * this->_internal_writebooklist_size();
  for (const auto& msg : this->writebooklist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddWriteBook::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddWriteBook* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddWriteBook>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddWriteBook)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddWriteBook)
    MergeFrom(*source);
  }
}

void C2SAddWriteBook::MergeFrom(const C2SAddWriteBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddWriteBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writebooklist_.MergeFrom(from.writebooklist_);
}

void C2SAddWriteBook::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddWriteBook::CopyFrom(const C2SAddWriteBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddWriteBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddWriteBook::IsInitialized() const {
  return true;
}

void C2SAddWriteBook::InternalSwap(C2SAddWriteBook* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  writebooklist_.InternalSwap(&other->writebooklist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddWriteBook::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DoYanTao::InitAsDefaultInstance() {
}
class DoYanTao::_Internal {
 public:
};

DoYanTao::DoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.DoYanTao)
}
DoYanTao::DoYanTao(const DoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  sbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sbh().empty()) {
    sbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sbh_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.DoYanTao)
}

void DoYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DoYanTao_MsgData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DoYanTao::~DoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.DoYanTao)
  SharedDtor();
}

void DoYanTao::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DoYanTao& DoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void DoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.DoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* DoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.DoYanTao.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SBH = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sbh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.DoYanTao.SBH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.DoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.DoYanTao.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string SBH = 2;
  if (this->sbh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sbh().data(), static_cast<int>(this->_internal_sbh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.DoYanTao.SBH");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sbh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.DoYanTao)
  return target;
}

size_t DoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.DoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string SBH = 2;
  if (this->sbh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sbh());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.DoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const DoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.DoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.DoYanTao)
    MergeFrom(*source);
  }
}

void DoYanTao::MergeFrom(const DoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.DoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sbh().size() > 0) {

    sbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sbh_);
  }
}

void DoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.DoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoYanTao::CopyFrom(const DoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.DoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoYanTao::IsInitialized() const {
  return true;
}

void DoYanTao::InternalSwap(DoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sbh_.Swap(&other->sbh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDoYanTao::InitAsDefaultInstance() {
}
class C2SDoYanTao::_Internal {
 public:
};

C2SDoYanTao::C2SDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDoYanTao)
}
C2SDoYanTao::C2SDoYanTao(const C2SDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDoYanTao)
}

void C2SDoYanTao::SharedCtor() {
  request_ = 0;
}

C2SDoYanTao::~C2SDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDoYanTao)
  SharedDtor();
}

void C2SDoYanTao::SharedDtor() {
}

void C2SDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDoYanTao& C2SDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDoYanTao)
  return target;
}

size_t C2SDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDoYanTao)
    MergeFrom(*source);
  }
}

void C2SDoYanTao::MergeFrom(const C2SDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDoYanTao::CopyFrom(const C2SDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDoYanTao::IsInitialized() const {
  return true;
}

void C2SDoYanTao::InternalSwap(C2SDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CDoYanTao::InitAsDefaultInstance() {
}
class S2CDoYanTao::_Internal {
 public:
};

S2CDoYanTao::S2CDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CDoYanTao)
}
S2CDoYanTao::S2CDoYanTao(const S2CDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      doyantaolist_(from.doyantaolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CDoYanTao)
}

void S2CDoYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CDoYanTao_MsgData_2eproto.base);
}

S2CDoYanTao::~S2CDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.S2CDoYanTao)
  SharedDtor();
}

void S2CDoYanTao::SharedDtor() {
}

void S2CDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CDoYanTao& S2CDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doyantaolist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.YanTao doYanTaoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_doyantaolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.YanTao doYanTaoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_doyantaolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_doyantaolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CDoYanTao)
  return target;
}

size_t S2CDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.YanTao doYanTaoList = 1;
  total_size += 1UL * this->_internal_doyantaolist_size();
  for (const auto& msg : this->doyantaolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CDoYanTao)
    MergeFrom(*source);
  }
}

void S2CDoYanTao::MergeFrom(const S2CDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  doyantaolist_.MergeFrom(from.doyantaolist_);
}

void S2CDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CDoYanTao::CopyFrom(const S2CDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CDoYanTao::IsInitialized() const {
  return true;
}

void S2CDoYanTao::InternalSwap(S2CDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  doyantaolist_.InternalSwap(&other->doyantaolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SSearchDoYanTao::InitAsDefaultInstance() {
}
class C2SSearchDoYanTao::_Internal {
 public:
};

C2SSearchDoYanTao::C2SSearchDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SSearchDoYanTao)
}
C2SSearchDoYanTao::C2SSearchDoYanTao(const C2SSearchDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SSearchDoYanTao)
}

void C2SSearchDoYanTao::SharedCtor() {
  request_ = 0;
}

C2SSearchDoYanTao::~C2SSearchDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SSearchDoYanTao)
  SharedDtor();
}

void C2SSearchDoYanTao::SharedDtor() {
}

void C2SSearchDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SSearchDoYanTao& C2SSearchDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SSearchDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SSearchDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SSearchDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SSearchDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SSearchDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SSearchDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SSearchDoYanTao)
  return target;
}

size_t C2SSearchDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SSearchDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SSearchDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SSearchDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SSearchDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SSearchDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SSearchDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SSearchDoYanTao)
    MergeFrom(*source);
  }
}

void C2SSearchDoYanTao::MergeFrom(const C2SSearchDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SSearchDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SSearchDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SSearchDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSearchDoYanTao::CopyFrom(const C2SSearchDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SSearchDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSearchDoYanTao::IsInitialized() const {
  return true;
}

void C2SSearchDoYanTao::InternalSwap(C2SSearchDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SSearchDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CSearchDoYanTao::InitAsDefaultInstance() {
}
class S2CSearchDoYanTao::_Internal {
 public:
};

S2CSearchDoYanTao::S2CSearchDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CSearchDoYanTao)
}
S2CSearchDoYanTao::S2CSearchDoYanTao(const S2CSearchDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      doyantaolist_(from.doyantaolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CSearchDoYanTao)
}

void S2CSearchDoYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CSearchDoYanTao_MsgData_2eproto.base);
}

S2CSearchDoYanTao::~S2CSearchDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.S2CSearchDoYanTao)
  SharedDtor();
}

void S2CSearchDoYanTao::SharedDtor() {
}

void S2CSearchDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CSearchDoYanTao& S2CSearchDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CSearchDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CSearchDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CSearchDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doyantaolist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CSearchDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.DoYanTao doYanTaoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_doyantaolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CSearchDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CSearchDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.DoYanTao doYanTaoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_doyantaolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_doyantaolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CSearchDoYanTao)
  return target;
}

size_t S2CSearchDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CSearchDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.DoYanTao doYanTaoList = 1;
  total_size += 1UL * this->_internal_doyantaolist_size();
  for (const auto& msg : this->doyantaolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CSearchDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CSearchDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CSearchDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CSearchDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CSearchDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CSearchDoYanTao)
    MergeFrom(*source);
  }
}

void S2CSearchDoYanTao::MergeFrom(const S2CSearchDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CSearchDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  doyantaolist_.MergeFrom(from.doyantaolist_);
}

void S2CSearchDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CSearchDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSearchDoYanTao::CopyFrom(const S2CSearchDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CSearchDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSearchDoYanTao::IsInitialized() const {
  return true;
}

void S2CSearchDoYanTao::InternalSwap(S2CSearchDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  doyantaolist_.InternalSwap(&other->doyantaolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CSearchDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddDoYanTao::InitAsDefaultInstance() {
}
class C2SAddDoYanTao::_Internal {
 public:
};

C2SAddDoYanTao::C2SAddDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddDoYanTao)
}
C2SAddDoYanTao::C2SAddDoYanTao(const C2SAddDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      doyantaolist_(from.doyantaolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddDoYanTao)
}

void C2SAddDoYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddDoYanTao_MsgData_2eproto.base);
}

C2SAddDoYanTao::~C2SAddDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddDoYanTao)
  SharedDtor();
}

void C2SAddDoYanTao::SharedDtor() {
}

void C2SAddDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddDoYanTao& C2SAddDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SAddDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doyantaolist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.DoYanTao doYanTaoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_doyantaolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.DoYanTao doYanTaoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_doyantaolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_doyantaolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddDoYanTao)
  return target;
}

size_t C2SAddDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.DoYanTao doYanTaoList = 1;
  total_size += 1UL * this->_internal_doyantaolist_size();
  for (const auto& msg : this->doyantaolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddDoYanTao)
    MergeFrom(*source);
  }
}

void C2SAddDoYanTao::MergeFrom(const C2SAddDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  doyantaolist_.MergeFrom(from.doyantaolist_);
}

void C2SAddDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddDoYanTao::CopyFrom(const C2SAddDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddDoYanTao::IsInitialized() const {
  return true;
}

void C2SAddDoYanTao::InternalSwap(C2SAddDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  doyantaolist_.InternalSwap(&other->doyantaolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateDoYanTao::InitAsDefaultInstance() {
  ::Protocol::_UpdateDoYanTao_default_instance_._instance.get_mutable()->yantao_ = const_cast< ::Protocol::DoYanTao*>(
      ::Protocol::DoYanTao::internal_default_instance());
}
class UpdateDoYanTao::_Internal {
 public:
  static const ::Protocol::DoYanTao& yantao(const UpdateDoYanTao* msg);
};

const ::Protocol::DoYanTao&
UpdateDoYanTao::_Internal::yantao(const UpdateDoYanTao* msg) {
  return *msg->yantao_;
}
UpdateDoYanTao::UpdateDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.UpdateDoYanTao)
}
UpdateDoYanTao::UpdateDoYanTao(const UpdateDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oldname().empty()) {
    oldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from._internal_has_yantao()) {
    yantao_ = new ::Protocol::DoYanTao(*from.yantao_);
  } else {
    yantao_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UpdateDoYanTao)
}

void UpdateDoYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateDoYanTao_MsgData_2eproto.base);
  oldname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  yantao_ = nullptr;
}

UpdateDoYanTao::~UpdateDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.UpdateDoYanTao)
  SharedDtor();
}

void UpdateDoYanTao::SharedDtor() {
  oldname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete yantao_;
}

void UpdateDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateDoYanTao& UpdateDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void UpdateDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UpdateDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && yantao_ != nullptr) {
    delete yantao_;
  }
  yantao_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Protocol.DoYanTao yantao = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_yantao(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string oldName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_oldname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.UpdateDoYanTao.oldName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UpdateDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.DoYanTao yantao = 1;
  if (this->has_yantao()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::yantao(this), target, stream);
  }

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oldname().data(), static_cast<int>(this->_internal_oldname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UpdateDoYanTao.oldName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_oldname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UpdateDoYanTao)
  return target;
}

size_t UpdateDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UpdateDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oldName = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oldname());
  }

  // .Protocol.DoYanTao yantao = 1;
  if (this->has_yantao()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *yantao_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.UpdateDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.UpdateDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.UpdateDoYanTao)
    MergeFrom(*source);
  }
}

void UpdateDoYanTao::MergeFrom(const UpdateDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UpdateDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.has_yantao()) {
    _internal_mutable_yantao()->::Protocol::DoYanTao::MergeFrom(from._internal_yantao());
  }
}

void UpdateDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.UpdateDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDoYanTao::CopyFrom(const UpdateDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UpdateDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDoYanTao::IsInitialized() const {
  return true;
}

void UpdateDoYanTao::InternalSwap(UpdateDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  oldname_.Swap(&other->oldname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(yantao_, other->yantao_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SUpdateDoYanTao::InitAsDefaultInstance() {
}
class C2SUpdateDoYanTao::_Internal {
 public:
};

C2SUpdateDoYanTao::C2SUpdateDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SUpdateDoYanTao)
}
C2SUpdateDoYanTao::C2SUpdateDoYanTao(const C2SUpdateDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      yantaolist_(from.yantaolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SUpdateDoYanTao)
}

void C2SUpdateDoYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SUpdateDoYanTao_MsgData_2eproto.base);
}

C2SUpdateDoYanTao::~C2SUpdateDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SUpdateDoYanTao)
  SharedDtor();
}

void C2SUpdateDoYanTao::SharedDtor() {
}

void C2SUpdateDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SUpdateDoYanTao& C2SUpdateDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SUpdateDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SUpdateDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SUpdateDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  yantaolist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SUpdateDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.UpdateDoYanTao yanTaoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_yantaolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SUpdateDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SUpdateDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.UpdateDoYanTao yanTaoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_yantaolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_yantaolist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SUpdateDoYanTao)
  return target;
}

size_t C2SUpdateDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SUpdateDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.UpdateDoYanTao yanTaoList = 1;
  total_size += 1UL * this->_internal_yantaolist_size();
  for (const auto& msg : this->yantaolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SUpdateDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SUpdateDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SUpdateDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SUpdateDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SUpdateDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SUpdateDoYanTao)
    MergeFrom(*source);
  }
}

void C2SUpdateDoYanTao::MergeFrom(const C2SUpdateDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SUpdateDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  yantaolist_.MergeFrom(from.yantaolist_);
}

void C2SUpdateDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SUpdateDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SUpdateDoYanTao::CopyFrom(const C2SUpdateDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SUpdateDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SUpdateDoYanTao::IsInitialized() const {
  return true;
}

void C2SUpdateDoYanTao::InternalSwap(C2SUpdateDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  yantaolist_.InternalSwap(&other->yantaolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SUpdateDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDeleteDoYanTao::InitAsDefaultInstance() {
}
class C2SDeleteDoYanTao::_Internal {
 public:
};

C2SDeleteDoYanTao::C2SDeleteDoYanTao()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDeleteDoYanTao)
}
C2SDeleteDoYanTao::C2SDeleteDoYanTao(const C2SDeleteDoYanTao& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      name_(from.name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDeleteDoYanTao)
}

void C2SDeleteDoYanTao::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SDeleteDoYanTao_MsgData_2eproto.base);
}

C2SDeleteDoYanTao::~C2SDeleteDoYanTao() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDeleteDoYanTao)
  SharedDtor();
}

void C2SDeleteDoYanTao::SharedDtor() {
}

void C2SDeleteDoYanTao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDeleteDoYanTao& C2SDeleteDoYanTao::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDeleteDoYanTao_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDeleteDoYanTao::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDeleteDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SDeleteDoYanTao::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_name();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.C2SDeleteDoYanTao.name"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDeleteDoYanTao::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDeleteDoYanTao)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name = 1;
  for (int i = 0, n = this->_internal_name_size(); i < n; i++) {
    const auto& s = this->_internal_name(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2SDeleteDoYanTao.name");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDeleteDoYanTao)
  return target;
}

size_t C2SDeleteDoYanTao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDeleteDoYanTao)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string name = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(name_.size());
  for (int i = 0, n = name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      name_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDeleteDoYanTao::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDeleteDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDeleteDoYanTao* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDeleteDoYanTao>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDeleteDoYanTao)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDeleteDoYanTao)
    MergeFrom(*source);
  }
}

void C2SDeleteDoYanTao::MergeFrom(const C2SDeleteDoYanTao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDeleteDoYanTao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_.MergeFrom(from.name_);
}

void C2SDeleteDoYanTao::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDeleteDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDeleteDoYanTao::CopyFrom(const C2SDeleteDoYanTao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDeleteDoYanTao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDeleteDoYanTao::IsInitialized() const {
  return true;
}

void C2SDeleteDoYanTao::InternalSwap(C2SDeleteDoYanTao* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.InternalSwap(&other->name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDeleteDoYanTao::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DoWeiWen::InitAsDefaultInstance() {
}
class DoWeiWen::_Internal {
 public:
};

DoWeiWen::DoWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.DoWeiWen)
}
DoWeiWen::DoWeiWen(const DoWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  sbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sbh().empty()) {
    sbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sbh_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.DoWeiWen)
}

void DoWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DoWeiWen_MsgData_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DoWeiWen::~DoWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.DoWeiWen)
  SharedDtor();
}

void DoWeiWen::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DoWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DoWeiWen& DoWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DoWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void DoWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.DoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sbh_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* DoWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.DoWeiWen.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SBH = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sbh();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Protocol.DoWeiWen.SBH"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DoWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.DoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.DoWeiWen.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string SBH = 2;
  if (this->sbh().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sbh().data(), static_cast<int>(this->_internal_sbh().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.DoWeiWen.SBH");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sbh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.DoWeiWen)
  return target;
}

size_t DoWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.DoWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string SBH = 2;
  if (this->sbh().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sbh());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DoWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.DoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const DoWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DoWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.DoWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.DoWeiWen)
    MergeFrom(*source);
  }
}

void DoWeiWen::MergeFrom(const DoWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.DoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.sbh().size() > 0) {

    sbh_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sbh_);
  }
}

void DoWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.DoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoWeiWen::CopyFrom(const DoWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.DoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoWeiWen::IsInitialized() const {
  return true;
}

void DoWeiWen::InternalSwap(DoWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sbh_.Swap(&other->sbh_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DoWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SDoWeiWen::InitAsDefaultInstance() {
}
class C2SDoWeiWen::_Internal {
 public:
};

C2SDoWeiWen::C2SDoWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SDoWeiWen)
}
C2SDoWeiWen::C2SDoWeiWen(const C2SDoWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SDoWeiWen)
}

void C2SDoWeiWen::SharedCtor() {
  request_ = 0;
}

C2SDoWeiWen::~C2SDoWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.C2SDoWeiWen)
  SharedDtor();
}

void C2SDoWeiWen::SharedDtor() {
}

void C2SDoWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SDoWeiWen& C2SDoWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SDoWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SDoWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SDoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SDoWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SDoWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SDoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SDoWeiWen)
  return target;
}

size_t C2SDoWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SDoWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SDoWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SDoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SDoWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SDoWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SDoWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SDoWeiWen)
    MergeFrom(*source);
  }
}

void C2SDoWeiWen::MergeFrom(const C2SDoWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SDoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SDoWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SDoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SDoWeiWen::CopyFrom(const C2SDoWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SDoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SDoWeiWen::IsInitialized() const {
  return true;
}

void C2SDoWeiWen::InternalSwap(C2SDoWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SDoWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2cDoWeiWen::InitAsDefaultInstance() {
}
class S2cDoWeiWen::_Internal {
 public:
};

S2cDoWeiWen::S2cDoWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2cDoWeiWen)
}
S2cDoWeiWen::S2cDoWeiWen(const S2cDoWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      doweiwenlist_(from.doweiwenlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2cDoWeiWen)
}

void S2cDoWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2cDoWeiWen_MsgData_2eproto.base);
}

S2cDoWeiWen::~S2cDoWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.S2cDoWeiWen)
  SharedDtor();
}

void S2cDoWeiWen::SharedDtor() {
}

void S2cDoWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2cDoWeiWen& S2cDoWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2cDoWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2cDoWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2cDoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doweiwenlist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2cDoWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.WeiWen doWeiWenList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_doweiwenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2cDoWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2cDoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.WeiWen doWeiWenList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_doweiwenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_doweiwenlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2cDoWeiWen)
  return target;
}

size_t S2cDoWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2cDoWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.WeiWen doWeiWenList = 1;
  total_size += 1UL * this->_internal_doweiwenlist_size();
  for (const auto& msg : this->doweiwenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2cDoWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2cDoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const S2cDoWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2cDoWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2cDoWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2cDoWeiWen)
    MergeFrom(*source);
  }
}

void S2cDoWeiWen::MergeFrom(const S2cDoWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2cDoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  doweiwenlist_.MergeFrom(from.doweiwenlist_);
}

void S2cDoWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2cDoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2cDoWeiWen::CopyFrom(const S2cDoWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2cDoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2cDoWeiWen::IsInitialized() const {
  return true;
}

void S2cDoWeiWen::InternalSwap(S2cDoWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  doweiwenlist_.InternalSwap(&other->doweiwenlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2cDoWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SSearchDoWeiwen::InitAsDefaultInstance() {
}
class C2SSearchDoWeiwen::_Internal {
 public:
};

C2SSearchDoWeiwen::C2SSearchDoWeiwen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SSearchDoWeiwen)
}
C2SSearchDoWeiwen::C2SSearchDoWeiwen(const C2SSearchDoWeiwen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_ = from.request_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SSearchDoWeiwen)
}

void C2SSearchDoWeiwen::SharedCtor() {
  request_ = 0;
}

C2SSearchDoWeiwen::~C2SSearchDoWeiwen() {
  // @@protoc_insertion_point(destructor:Protocol.C2SSearchDoWeiwen)
  SharedDtor();
}

void C2SSearchDoWeiwen::SharedDtor() {
}

void C2SSearchDoWeiwen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SSearchDoWeiwen& C2SSearchDoWeiwen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SSearchDoWeiwen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SSearchDoWeiwen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SSearchDoWeiwen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ = 0;
  _internal_metadata_.Clear();
}

const char* C2SSearchDoWeiwen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SSearchDoWeiwen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SSearchDoWeiwen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_request(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SSearchDoWeiwen)
  return target;
}

size_t C2SSearchDoWeiwen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SSearchDoWeiwen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 request = 1;
  if (this->request() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_request());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SSearchDoWeiwen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SSearchDoWeiwen)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SSearchDoWeiwen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SSearchDoWeiwen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SSearchDoWeiwen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SSearchDoWeiwen)
    MergeFrom(*source);
  }
}

void C2SSearchDoWeiwen::MergeFrom(const C2SSearchDoWeiwen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SSearchDoWeiwen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request() != 0) {
    _internal_set_request(from._internal_request());
  }
}

void C2SSearchDoWeiwen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SSearchDoWeiwen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SSearchDoWeiwen::CopyFrom(const C2SSearchDoWeiwen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SSearchDoWeiwen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SSearchDoWeiwen::IsInitialized() const {
  return true;
}

void C2SSearchDoWeiwen::InternalSwap(C2SSearchDoWeiwen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SSearchDoWeiwen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void S2CSearchDoWeiwen::InitAsDefaultInstance() {
}
class S2CSearchDoWeiwen::_Internal {
 public:
};

S2CSearchDoWeiwen::S2CSearchDoWeiwen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.S2CSearchDoWeiwen)
}
S2CSearchDoWeiwen::S2CSearchDoWeiwen(const S2CSearchDoWeiwen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      doweiwenlist_(from.doweiwenlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2CSearchDoWeiwen)
}

void S2CSearchDoWeiwen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_S2CSearchDoWeiwen_MsgData_2eproto.base);
}

S2CSearchDoWeiwen::~S2CSearchDoWeiwen() {
  // @@protoc_insertion_point(destructor:Protocol.S2CSearchDoWeiwen)
  SharedDtor();
}

void S2CSearchDoWeiwen::SharedDtor() {
}

void S2CSearchDoWeiwen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const S2CSearchDoWeiwen& S2CSearchDoWeiwen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_S2CSearchDoWeiwen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void S2CSearchDoWeiwen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2CSearchDoWeiwen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doweiwenlist_.Clear();
  _internal_metadata_.Clear();
}

const char* S2CSearchDoWeiwen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.DoWeiWen doWeiWenList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_doweiwenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* S2CSearchDoWeiwen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2CSearchDoWeiwen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.DoWeiWen doWeiWenList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_doweiwenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_doweiwenlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2CSearchDoWeiwen)
  return target;
}

size_t S2CSearchDoWeiwen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2CSearchDoWeiwen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.DoWeiWen doWeiWenList = 1;
  total_size += 1UL * this->_internal_doweiwenlist_size();
  for (const auto& msg : this->doweiwenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2CSearchDoWeiwen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.S2CSearchDoWeiwen)
  GOOGLE_DCHECK_NE(&from, this);
  const S2CSearchDoWeiwen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<S2CSearchDoWeiwen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.S2CSearchDoWeiwen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.S2CSearchDoWeiwen)
    MergeFrom(*source);
  }
}

void S2CSearchDoWeiwen::MergeFrom(const S2CSearchDoWeiwen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2CSearchDoWeiwen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  doweiwenlist_.MergeFrom(from.doweiwenlist_);
}

void S2CSearchDoWeiwen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.S2CSearchDoWeiwen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2CSearchDoWeiwen::CopyFrom(const S2CSearchDoWeiwen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2CSearchDoWeiwen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2CSearchDoWeiwen::IsInitialized() const {
  return true;
}

void S2CSearchDoWeiwen::InternalSwap(S2CSearchDoWeiwen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  doweiwenlist_.InternalSwap(&other->doweiwenlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2CSearchDoWeiwen::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void C2SAddDoWeiWen::InitAsDefaultInstance() {
}
class C2SAddDoWeiWen::_Internal {
 public:
};

C2SAddDoWeiWen::C2SAddDoWeiWen()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Protocol.C2SAddDoWeiWen)
}
C2SAddDoWeiWen::C2SAddDoWeiWen(const C2SAddDoWeiWen& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      doweiwenlist_(from.doweiwenlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2SAddDoWeiWen)
}

void C2SAddDoWeiWen::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_C2SAddDoWeiWen_MsgData_2eproto.base);
}

C2SAddDoWeiWen::~C2SAddDoWeiWen() {
  // @@protoc_insertion_point(destructor:Protocol.C2SAddDoWeiWen)
  SharedDtor();
}

void C2SAddDoWeiWen::SharedDtor() {
}

void C2SAddDoWeiWen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2SAddDoWeiWen& C2SAddDoWeiWen::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2SAddDoWeiWen_MsgData_2eproto.base);
  return *internal_default_instance();
}


void C2SAddDoWeiWen::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2SAddDoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doweiwenlist_.Clear();
  _internal_metadata_.Clear();
}

const char* C2SAddDoWeiWen::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Protocol.DoWeiWen doWeiWenList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_doweiwenlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2SAddDoWeiWen::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2SAddDoWeiWen)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.DoWeiWen doWeiWenList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_doweiwenlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_doweiwenlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2SAddDoWeiWen)
  return target;
}

size_t C2SAddDoWeiWen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2SAddDoWeiWen)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.DoWeiWen doWeiWenList = 1;
  total_size += 1UL * this->_internal_doweiwenlist_size();
  for (const auto& msg : this->doweiwenlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2SAddDoWeiWen::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Protocol.C2SAddDoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  const C2SAddDoWeiWen* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2SAddDoWeiWen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Protocol.C2SAddDoWeiWen)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Protocol.C2SAddDoWeiWen)
    MergeFrom(*source);
  }
}

void C2SAddDoWeiWen::MergeFrom(const C2SAddDoWeiWen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2SAddDoWeiWen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  doweiwenlist_.MergeFrom(from.doweiwenlist_);
}

void C2SAddDoWeiWen::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Protocol.C2SAddDoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2SAddDoWeiWen::CopyFrom(const C2SAddDoWeiWen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2SAddDoWeiWen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2SAddDoWeiWen::IsInitialized() const {
  return true;
}

void C2SAddDoWeiWen::InternalSwap(C2SAddDoWeiWen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  doweiwenlist_.InternalSwap(&other->doweiwenlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2SAddDoWeiWen::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::Department* Arena::CreateMaybeMessage< ::Protocol::Department >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::Department >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDepartment* Arena::CreateMaybeMessage< ::Protocol::C2SDepartment >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDepartment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CDepartment* Arena::CreateMaybeMessage< ::Protocol::S2CDepartment >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CDepartment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddDepartment* Arena::CreateMaybeMessage< ::Protocol::C2SAddDepartment >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddDepartment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UpdateDepartment* Arena::CreateMaybeMessage< ::Protocol::UpdateDepartment >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::UpdateDepartment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SUpdateDepartment* Arena::CreateMaybeMessage< ::Protocol::C2SUpdateDepartment >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SUpdateDepartment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDeleteDepartment* Arena::CreateMaybeMessage< ::Protocol::C2SDeleteDepartment >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDeleteDepartment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::Book* Arena::CreateMaybeMessage< ::Protocol::Book >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::Book >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SBook* Arena::CreateMaybeMessage< ::Protocol::C2SBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CBook* Arena::CreateMaybeMessage< ::Protocol::S2CBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddBooks* Arena::CreateMaybeMessage< ::Protocol::C2SAddBooks >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddBooks >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDeleteBooks* Arena::CreateMaybeMessage< ::Protocol::C2SDeleteBooks >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDeleteBooks >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UpdateBook* Arena::CreateMaybeMessage< ::Protocol::UpdateBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::UpdateBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SUpdateBooks* Arena::CreateMaybeMessage< ::Protocol::C2SUpdateBooks >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SUpdateBooks >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::YanTao* Arena::CreateMaybeMessage< ::Protocol::YanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::YanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CYanTao* Arena::CreateMaybeMessage< ::Protocol::S2CYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SAddYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UpdateYanTao* Arena::CreateMaybeMessage< ::Protocol::UpdateYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::UpdateYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SUpdateYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SUpdateYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SUpdateYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDeleteYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SDeleteYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDeleteYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::WeiWen* Arena::CreateMaybeMessage< ::Protocol::WeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::WeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SWeiWen* Arena::CreateMaybeMessage< ::Protocol::C2SWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CWeiWen* Arena::CreateMaybeMessage< ::Protocol::S2CWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddWeiWen* Arena::CreateMaybeMessage< ::Protocol::C2SAddWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UpdateWeiWen* Arena::CreateMaybeMessage< ::Protocol::UpdateWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::UpdateWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SUpdateWeiWen* Arena::CreateMaybeMessage< ::Protocol::C2SUpdateWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SUpdateWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDeleteWeiWen* Arena::CreateMaybeMessage< ::Protocol::C2SDeleteWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDeleteWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::WriteBook* Arena::CreateMaybeMessage< ::Protocol::WriteBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::WriteBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SWriteBook* Arena::CreateMaybeMessage< ::Protocol::C2SWriteBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SWriteBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CWriteBook* Arena::CreateMaybeMessage< ::Protocol::S2CWriteBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CWriteBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SSearchWriteBook* Arena::CreateMaybeMessage< ::Protocol::C2SSearchWriteBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SSearchWriteBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CSearchWriteBook* Arena::CreateMaybeMessage< ::Protocol::S2CSearchWriteBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CSearchWriteBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddWriteBook* Arena::CreateMaybeMessage< ::Protocol::C2SAddWriteBook >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddWriteBook >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::DoYanTao* Arena::CreateMaybeMessage< ::Protocol::DoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::DoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDoYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CDoYanTao* Arena::CreateMaybeMessage< ::Protocol::S2CDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SSearchDoYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SSearchDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SSearchDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CSearchDoYanTao* Arena::CreateMaybeMessage< ::Protocol::S2CSearchDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CSearchDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddDoYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SAddDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UpdateDoYanTao* Arena::CreateMaybeMessage< ::Protocol::UpdateDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::UpdateDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SUpdateDoYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SUpdateDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SUpdateDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDeleteDoYanTao* Arena::CreateMaybeMessage< ::Protocol::C2SDeleteDoYanTao >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDeleteDoYanTao >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::DoWeiWen* Arena::CreateMaybeMessage< ::Protocol::DoWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::DoWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SDoWeiWen* Arena::CreateMaybeMessage< ::Protocol::C2SDoWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SDoWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2cDoWeiWen* Arena::CreateMaybeMessage< ::Protocol::S2cDoWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2cDoWeiWen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SSearchDoWeiwen* Arena::CreateMaybeMessage< ::Protocol::C2SSearchDoWeiwen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SSearchDoWeiwen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2CSearchDoWeiwen* Arena::CreateMaybeMessage< ::Protocol::S2CSearchDoWeiwen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::S2CSearchDoWeiwen >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2SAddDoWeiWen* Arena::CreateMaybeMessage< ::Protocol::C2SAddDoWeiWen >(Arena* arena) {
  return Arena::CreateInternal< ::Protocol::C2SAddDoWeiWen >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
